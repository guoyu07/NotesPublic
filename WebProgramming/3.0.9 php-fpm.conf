
;# auto start php-fpm
;sudo chkconfig php-fpm on




[global]
pid = run/php-fpm.pid
error_log = /var/log/php/php-fpm.errlog

slowlog = /var/log/php/php-fpm-$pool.slowlog
request_slowlog_timeout = 2s



; [0,] :　FPM'll restart when [ emergency_restart_threshold ] times child processes exit with SIGSEGV or SIGBUS within [ emergency_restart_interval ]. 0 means 'Off'
emergency_restart_threshold = 60 fastcgi_connect_timeout      180;
                fastcgi_read_timeout            600;
                fastcgi_send_timeout            600;
daemonize = yes

[www]
listen = 127.0.0.1:9000

; [any, IPS_SEPERATED_WITH_COMMA]
;listen.allowed_clients = 127.0.0.1

; 
; dynamic: default, dynamic defend on [pm.start_servers, pm.min_spare_servers, pm.max_spare_servers, pm.max_chilrend]
; static: definite equal [ pm.max_children ]
;ondemand: [,pm.max_children] [ pm.process_idle_timeout ]
pm = dynamic
pm.max_children = 5
; min_space_servers + (max_sqare_servers - min_spare_servers) / 2
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
pm.process_idle_timeout = 10s

; [0, PHP_FCGI_MAX_REQUESTS]: Re-spawn when the number of requests of each child process executed.
; it may cause 502 error
pm.max_requests = 1024

; ~/Notes/Servers/Errors/502 504
; [0=Off,] ; The timeout for serving a single request after which the worker process'll be killed.
; s m h d
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
request_terminate_timeout的值如果设置为0或者过长的时间，可能会引起file_get_contents的资源问题。
如果file_get_contents请求的远程资源如果反应过慢，file_get_contents就会一直卡在那里不会超时。我们知道php.ini 里面max_execution_time 可以设置 PHP 脚本的最大执行时间，但是，在 php-cgi(php-fpm) 中，该参数不会起效。真正能够控制 PHP 脚本最大执行时间的是 php-fpm.conf 配置文件中的request_terminate_timeout参数。
request_terminate_timeout默认值为 0 秒，也就是说，PHP 脚本会一直执行下去。这样，当所有的 php-cgi 进程都卡在 file_get_contents() 函数时，这台 Nginx+PHP 的 WebServer 已经无法再处理新的 PHP 请求了，Nginx 将给用户返回“502 Bad Gateway”。修改该参数，设置一个 PHP 脚本最大执行时间是必要的，但是，治标不治本。例如改成 30s，如果发生 file_get_contents() 获取网页内容较慢的情况，这就意味着 150 个 php-cgi 进程，每秒钟只能处理 5 个请求，WebServer 同样很难避免”502 Bad Gateway”。解决办法是request_terminate_timeout设置为10s或者一个合理的值，或者给file_get_contents加一个超时参数。
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
request_terminate_timeout = 10s