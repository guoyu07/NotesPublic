<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>ICO图标在线制作，ICO格式转换</title>
<script src="../../Scripts/swfobject_modified.js" type="text/javascript"></script>
</head>
<link rel="stylesheet" type="text/css" href="../index.css" />
<link rel="stylesheet" type="text/css" href="http://localhost:8080/v-get.com/app/index.css" />



<script type="text/javascript" src="http://localhost:8080/v-get.com/i/i.js"></script>


</head>
<body>
<div class="w">
<div class="t"><div class="q"><a href="">V-Get!首页</a>|<a href="">设为主页</a>|<a href="">收藏本站</a></div></div>
<div class="u">
<img src="http://localhost:8080/app.v-get.com/index.png" />
</div>
<div class="n"><a href="http://localhost:8080/app.v-get.com/">首页</a><a href="http://localhost:8080/app.v-get.com/biz/">商务办公</a><a href="http://localhost:8080/app.v-get.com/finance/">金融计算</a><a href="http://localhost:8080/app.v-get.com/life/">生活助手</a><a href="http://localhost:8080/app.v-get.com/img/" class="no">图片美工</a><a href="http://localhost:8080/app.v-get.com/edit/">文字设计</a><a href="http://localhost:8080/app.v-get.com/edu/">教育考试</a><a href="http://localhost:8080/app.v-get.com/game/">娱乐游戏</a><a href="http://localhost:8080/app.v-get.com/pc/">电脑优化</a></div>
<div class="w4"><a href="#"><img src="http://localhost:8080/v-get.com/i/wuliu/a/zzidc980.gif" /></a></div>
<!--这里不用include，因为基本这个部分是固定的；广告以后采用js替换，或者固定图片名称-->
<!--因为都在life文件夹下，而且涉及.no，所以这样更好-->
<div class="v">
<div class="p l">
<?php require 'l.htm';?>


</div>
<div class="p r">
<style type="text/css">
<!--
.c p{line-height:28px}
.c ol{list-style-position:inside;list-style-type:disc;margin:9px}
.c li{line-height:22px}
.c a{color:#06C}
.ci{margin:9px;width:200px;height:100px; }
.c .p{ text-align:center}
#ri{ cursor:pointer}
#se{color:#f00}
-->
</style>
<h1>ICO图标在线制作，ICO格式转换</h1>
<div class="c">
<ol>
<li>选择本地文件后，该工具会自动转化，生成预览图。点击并下载相应大小的ICO文件保存即可。</li><li>本  支持格式 png、jpg、gif在线转换成.ico图标。如果你选用其他格式的图片，请到<a href="#">&ldquo;在线图片格式转码&rdquo;</a>转码</li><li>图像大小任意，该程序会将其自动缩放。但由于图片缩放可能会稍微影响质量，推荐你使用与转化后的尺寸相同的原始图片，即16*16(网站FAVICON)或48*48(软件图标)</li><li>网站图标使用方法：生成后网站ICO后(16*16像素的那个)，保存为favicon.ico,然后上传到网站根目录。</li><li>如果原始图片和生成图片尺寸一样，生成图片将保持原始PNG/GIF图片的透明属性</li></ol>
<div>
  <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="600" height="350" id="FlashID" title="ICO在线制作">
    <param name="movie" value="http://localhost:8080/v-get.com/app/img/ico.swf" />
    <param name="quality" value="high" />
    <param name="wmode" value="opaque" />
    <param name="swfversion" value="6.0.65.0" />
    <!-- 此 param 标签提示使用 Flash Player 6.0 r65 和更高版本的用户下载最新版本的 Flash Player。如果您不想让用户看到该提示，请将其删除。 -->
    <param name="expressinstall" value="../../Scripts/expressInstall.swf" />
    <!-- 下一个对象标签用于非 IE 浏览器。所以使用 IECC 将其从 IE 隐藏。 -->
    <!--[if !IE]>-->
    <object type="application/x-shockwave-flash" data="http://localhost:8080/v-get.com/app/img/ico.swf" width="600" height="350">
      <!--<![endif]-->
      <param name="quality" value="high" />
      <param name="wmode" value="opaque" />
      <param name="swfversion" value="6.0.65.0" />
      <param name="expressinstall" value="../../Scripts/expressInstall.swf" />
      <!-- 浏览器将以下替代内容显示给使用 Flash Player 6.0 和更低版本的用户。 -->
      <div>
        <h4>此页面上的内容需要较新版本的 Adobe Flash Player。</h4>
        <p><a href="http://www.adobe.com/go/getflashplayer"><img src="http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif" alt="获取 Adobe Flash Player" width="112" height="33" /></a></p>
      </div>
      <!--[if !IE]>-->
    </object>
    <!--<![endif]-->
  </object>
</div>
<p id="se"></p>
	<form action="" method="post" enctype='multipart/form-data' onsubmit="if(L(this.i.value)!=4){H($('se'),'请检查[验证码]或者[文档类型或大小]是否正确');return false}else this.submit()"><p><input type="file" name="upimage" size="30" /></p><p>
    <input type="radio" name="s" value="1" checked="checked"/>16*16网页图标<input type="radio" name="s" value="2"  />32*32文件夹图标<input type="radio" name="s" value="3"  />48*48系统图标<input type="radio" name="s" value="9"  />原始尺寸</p><p><input type="text" size="4" class="k" name="i"/><img src="http://localhost:8080/v-get.com/app/img.php" title="换一张" id="ri"/><input type="submit" style="width:150px; height:30px;" value="在线生成.ico图标"></p></form> 
 <p>如果下面没有正确生成相应ico,请检查图片格式是否正确</p>

<div>


<?PHP    
$vc=$_SESSION['validcode'];
if(isset($_POST['i'])&&$_POST['i']==$vc){  
    if(isset($_FILES['upimage']['tmp_name'])&&$_FILES['upimage']['tmp_name']&&is_uploaded_file($_FILES['upimage']['tmp_name'])){ 
	    $tem=$_FILES['upimage']['tmp_name'];
	/*$_FILES['myFile']['tmp_name'] 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定，但用 putenv() 函数设置是不起作用的。
*/
       // $fileext=array("image/jpeg","image/gif","image/png");if(!in_array($_FILES['upimage']['type'],$fileext)){echo "你上传的文件格式不正确 仅支持 jpg，gif，png";}  
        if($im=@imagecreatefrompng($tem) or $im=@imagecreatefromgif($tem) or $im=@imagecreatefromjpeg($tem)){  
            $info=@getimagesize($tem);/*本函数可用来取得 GIF、JPEG 及 PNG 三种 WWW 上图片的高与宽，不需要安装 GD library就可以使用本函数。返回的数组有四个元素。返回数组的第一个元素 (索引值 0) 是图片的高度，单位是像素 (pixel)。第二个元素 (索引值 1) 是图片的宽度。第三个元素 (索引值 2) 是图片的文件格式，其值 1 为 GIF 格式、 2 为 JPEG/JPG 格式、3 为 PNG 格式。第四个元素 (索引值 3) 为图片的高与宽字符串，height=xxx width=yyy。*/
			//if(!is_array($info)){echo "图形格式错误！";}
			$height=$info[0];$width=$info[1];$type=$info[2];
			$s=$_POST['s'];
			switch ($info[2]){
            case IMAGETYPE_GIF:$image = imagecreatefromgif($tem);break;
            case IMAGETYPE_JPEG:$image = imagecreatefromjpeg($tem);break;
            case IMAGETYPE_PNG:$image = imagecreatefrompng($tem);break;
            default:echo '只支持格式为PNG、GIF、JPEG的图片';return false;
            }
            switch ($s){
			case 1:$resize_im=@imagecreatetruecolor(16,16);$ht=16;$wd=16;break;
			case 2:$resize_im=@imagecreatetruecolor(32,32);$ht=32;$wd=32;break;
			case 3:$resize_im=@imagecreatetruecolor(48,48);$ht=48;$wd=48;break;
			case 9:$resize_im=@imagecreatetruecolor($height,$width);$ht=$height;$wd=$width;break;
			default:$resize_im=@imagecreatetruecolor(16,16);$ht=16;$wd=16;
			}
            if($height==$ht&&$width=$wd){$gd_image_array=array($im);}
	        else{imagecopyresampled($resize_im,$im,0,0,0,0,$ht,$wd,$height,$width);$gd_image_array=array($resize_im);}
			class phpthumb_ico { 
    function phpthumb_ico() {return true;} 
    function GD2ICOstring(&$gd_image_array) { 
        foreach ($gd_image_array as $key => $gd_image) { 
            $ImageWidths[$key]  = ImageSX($gd_image); 
            $ImageHeights[$key] = ImageSY($gd_image); 
            $bpp[$key]          = ImageIsTrueColor($gd_image) ? 32 : 24; 
            $totalcolors[$key]  = ImageColorsTotal($gd_image); 
            $icXOR[$key] = ''; 
            for ($y = $ImageHeights[$key] - 1; $y >= 0; $y--) { 
                for ($x = 0; $x < $ImageWidths[$key]; $x++) { 
                    $argb = $this->GetPixelColor($gd_image, $x, $y); 
                    $a = round(255 * ((127 - $argb['alpha']) / 127)); 
                    $r = $argb['red']; 
                    $g = $argb['green']; 
                    $b = $argb['blue']; 
                    if ($bpp[$key] == 32) { 
                        $icXOR[$key] .= chr($b).chr($g).chr($r).chr($a); 
                    } elseif ($bpp[$key] == 24) { 
                        $icXOR[$key] .= chr($b).chr($g).chr($r); 
                    } 
                    if ($a < 128) { 
                        @$icANDmask[$key][$y] .= '1'; 
                    } else { 
                        @$icANDmask[$key][$y] .= '0'; 
                    } 
                } 
                // mask bits are 32-bit aligned per scanline 
                while (strlen($icANDmask[$key][$y]) % 32) { 
                    $icANDmask[$key][$y] .= '0'; 
                } 
            } 
            $icAND[$key] = ''; 
            foreach ($icANDmask[$key] as $y => $scanlinemaskbits) { 
                for ($i = 0; $i < strlen($scanlinemaskbits); $i += 8) { 
                    $icAND[$key] .= chr(bindec(str_pad(substr($scanlinemaskbits, $i, 8), 8, '0', STR_PAD_LEFT))); 
                } 
            } 
        } 
        foreach ($gd_image_array as $key => $gd_image) { 
            $biSizeImage = $ImageWidths[$key] * $ImageHeights[$key] * ($bpp[$key] / 8); 
            // BITMAPINFOHEADER - 40 bytes 
            $BitmapInfoHeader[$key]  = ''; 
            $BitmapInfoHeader[$key] .= "\x28\x00\x00\x00";                              // DWORD  biSize; 
            $BitmapInfoHeader[$key] .= $this->LittleEndian2String($ImageWidths[$key], 4);      // LONG   biWidth; 
            // The biHeight member specifies the combined 
            // height of the XOR and AND masks. 
            $BitmapInfoHeader[$key] .= $this->LittleEndian2String($ImageHeights[$key] * 2, 4); // LONG   biHeight; 
            $BitmapInfoHeader[$key] .= "\x01\x00";                                      // WORD   biPlanes; 
               $BitmapInfoHeader[$key] .= chr($bpp[$key])."\x00";                          // wBitCount; 
            $BitmapInfoHeader[$key] .= "\x00\x00\x00\x00";                              // DWORD  biCompression; 
            $BitmapInfoHeader[$key] .= $this->LittleEndian2String($biSizeImage, 4);            // DWORD  biSizeImage; 
            $BitmapInfoHeader[$key] .= "\x00\x00\x00\x00";                              // LONG   biXPelsPerMeter; 
            $BitmapInfoHeader[$key] .= "\x00\x00\x00\x00";                              // LONG   biYPelsPerMeter; 
            $BitmapInfoHeader[$key] .= "\x00\x00\x00\x00";                              // DWORD  biClrUsed; 
            $BitmapInfoHeader[$key] .= "\x00\x00\x00\x00";                              // DWORD  biClrImportant; 
        } 
        $icondata  = "\x00\x00";                                      // idReserved;   // Reserved (must be 0) 
        $icondata .= "\x01\x00";                                      // idType;       // Resource Type (1 for icons) 
        $icondata .= $this->LittleEndian2String(count($gd_image_array), 2);  // idCount;      // How many images? 
        $dwImageOffset = 6 + (count($gd_image_array) * 16); 
        foreach ($gd_image_array as $key => $gd_image) { 
            // ICONDIRENTRY   idEntries[1]; // An entry for each image (idCount of 'em) 
            $icondata .= chr($ImageWidths[$key]);                     // bWidth;          // Width, in pixels, of the image 
            $icondata .= chr($ImageHeights[$key]);                    // bHeight;         // Height, in pixels, of the image 
            $icondata .= chr($totalcolors[$key]);                     // bColorCount;     // Number of colors in image (0 if >=8bpp) 
            $icondata .= "\x00";                                      // bReserved;       // Reserved ( must be 0) 
            $icondata .= "\x01\x00";                                  // wPlanes;         // Color Planes 
            $icondata .= chr($bpp[$key])."\x00";                      // wBitCount;       // Bits per pixel 
            $dwBytesInRes = 40 + strlen($icXOR[$key]) + strlen($icAND[$key]); 
            $icondata .= $this->LittleEndian2String($dwBytesInRes, 4);       // dwBytesInRes;    // How many bytes in this resource? 
            $icondata .= $this->LittleEndian2String($dwImageOffset, 4);      // dwImageOffset;   // Where in the file is this image? 
            $dwImageOffset += strlen($BitmapInfoHeader[$key]); 
            $dwImageOffset += strlen($icXOR[$key]); 
            $dwImageOffset += strlen($icAND[$key]); 
        } 
        foreach ($gd_image_array as $key => $gd_image) { 
            $icondata .= $BitmapInfoHeader[$key]; 
            $icondata .= $icXOR[$key]; 
            $icondata .= $icAND[$key]; 
        } 
        return $icondata; 
    } 
    function LittleEndian2String($number, $minbytes=1) { 
        $intstring = ''; 
        while ($number > 0) { 
            $intstring = $intstring.chr($number & 255); 
            $number >>= 8; 
        } 
        return str_pad($intstring, $minbytes, "\x00", STR_PAD_RIGHT); 
    } 
    function GetPixelColor(&$img, $x, $y) { 
        if (!is_resource($img)) { 
            return false; 
        } 
        return @ImageColorsForIndex($img, @ImageColorAt($img, $x, $y)); 
    } 
}  
			
			$icon=new phpthumb_ico();  
            $icon_data=$icon->GD2ICOstring($gd_image_array);  
			$r=date("ymdhis").rand(0,1).'.ico';
            $filename=$_SERVER['DOCUMENT_ROOT'].'/v-get.com/app/b/'.$r;  
            file_put_contents($filename,$icon_data);
		   echo '<p>您的ICON图片预览图：<iframe src="http://localhost:8080/v-get.com/app/b/'.$r.'" id="c"  marginheight="0" marginwidth="0" frameborder="0" scrolling="no" height="'.$wd.'" width="'.$ht.'" style="display:none"></iframe><img src="http://localhost:8080/v-get.com/app/b/'.$r.'" /></p><p><a href="#" onclick=c.document.execCommand("SaveAs")>保存'.$ht.'*'.$wd.'px 图标</a>（快速保存ICO：鼠标放到图片上&rarr;右击&rarr;图片另存为）</p>';  
            
        }
        else{die ('生成错误请重试！');}  
    }      
}  
?>  
<div>
<div class="p ci" style="background:#F00">这里是v-get网页图标</div>
<div class="p ci" style="background:#F0F">这里是v-get目录图标</div>
<div class="p ci" style="background:#FF0">这里是v-get系统图标</div>

</div>
<div class="o"></div>
</div>

</div>
<?php require 'c.htm';?>



</div>

</div>


</div>


<script language="javascript" type="text/javascript">
<!--
E($('ri'),'click',function(){this.src="http://localhost:8080/v-get.com/app/img.php?r="+Math.random();});
swfobject.registerObject("FlashID");
//-->
</script>
</body>
</html>