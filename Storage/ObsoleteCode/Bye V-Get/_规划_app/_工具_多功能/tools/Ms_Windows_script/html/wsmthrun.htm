<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>Run 方法</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Windows&nbsp;脚本宿主</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="wsmthrun"></A>Run 方法</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>在新过程中运行程序。</P>

<PRE class="syntax"><I>object</I><B>.Run</B>(<I>strCommand</I>, [<I>intWindowStyle</I>], [<I>bWaitOnReturn</I>]) </PRE>

<H4 class="dtH4">参数</H4>

<DL>
<DT><I>object</I></DT>

<DD>WshShell 对象。</dd>

<DT><I>strCommand</I></DT>

<DD>表示要运行的命令行的字符串值。必须包括要传递到可执行文件的所有参数。</dd>

<DT><I>intWindowStyle</I></DT>

<DD>可选。表示程序窗口外观的整数值。请注意，并非所有程序都使用此信息。</dd>

<DT><I>bWaitOnReturn</I></DT>

<DD>可选。布尔值，表示在继续执行脚本中的下一条语句之前，脚本是否等待执行完程序。如果设为 true，则在执行完程序后才执行脚本，Run 方法返回由程序返回的任何错误代码。如果设为 false（默认值），则 Run 方法将自动在启动程序后立即返回 0（不是错误代码）。</dd>
</DL>

<H4 class="dtH4">说明</H4>

<P>Run 方法返回一个整数。Run 方法启动在新 Windows 进程中运行的程序。可以让脚本等到程序执行完后再继续执行。这允许您同步运行脚本和程序。<I>strCommand</I> 参数内的环境变量自动扩展。如果某个文件类型已正确注册到某个程序中，则对该类型的文件调用 Run 方法时将执行该程序。例如，如果您的计算机系统中装有 Word，则对 *.doc 文件调用 Run 方法时将启动 Word 并加载该文档。下表列出了 <I>intWindowStyle</I> 的可用设置。</P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=23%>intWindowStyle</TH>
<TH width=77%>说明</TH>
</TR>

<TR VALIGN="top">
<TD width=23%>0</TD>
<TD width=77%>隐藏一个窗口并激活另一个窗口。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>1</TD>
<TD width=77%>激活并显示窗口。如果窗口处于最小化或最大化状态，则系统将其还原到原始大小和位置。第一次显示该窗口时，应用程序应指定此标志。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>2</TD>
<TD width=77%>激活窗口并将其显示为最小化窗口。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>3</TD>
<TD width=77%>激活窗口并将其显示为最大化窗口。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>4</TD>
<TD width=77%>按最近的窗口大小和位置显示窗口。活动窗口保持活动状态。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>5</TD>
<TD width=77%>激活窗口并按当前的大小和位置显示它。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>6</TD>
<TD width=77%>最小化指定的窗口，并按照 Z 顺序激活下一个顶部窗口。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>7</TD>
<TD width=77%>将窗口显示为最小化窗口。活动窗口保持活动状态。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>8</TD>
<TD width=77%>将窗口显示为当前状态。活动窗口保持活动状态。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>9</TD>
<TD width=77%>激活并显示窗口。如果窗口处于最小化或最大化状态，则系统将其还原到原始大小和位置。还原最小化窗口时，应用程序应指定此标志。</TD>
</TR>

<TR VALIGN="top">
<TD width=23%>10</TD>
<TD width=77%>根据启动应用程序的程序状态来设置显示状态。</TD>
</TR>
</table></div>

<H4 class="dtH4">示例 1</H4>

<P>下面的 VBScript 代码用记事本打开当前运行脚本的副本。</P>

<PRE class="code">Set WshShell = WScript.CreateObject("WScript.Shell")
WshShell.<code><b class="cfe">Run </b></code>"%windir%\notepad " &amp; WScript.ScriptFullName</PRE>

<P>下面的 VBScript 代码与上述代码完成的操作相同，不同之处在于，它指定窗口类型，等待用户关闭记事本，关闭记事本时保存从记事本返回的错误代码。</P>

<PRE class="code">Set WshShell = WScript.CreateObject("WScript.Shell")
Return = WshShell.<code><b class="cfe">Run(</b></code>"notepad " &amp; WScript.ScriptFullName, 1, true<code><b class="cfe">)</b></code></PRE>

<H4 class="dtH4">示例 2</H4>

<P>下面的 VBScript 代码打开一个命令窗口，将路径改为 C:\，并执行 DIR 命令。</P>

<PRE class="code">Dim oShell
Set oShell = WScript.CreateObject ("WSCript.shell")
oShell.run "cmd /K CD C:\ &amp; Dir"
Set oShell = Nothing</PRE>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="wsobjwshshell.htm">WshShell 对象</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
