<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>&lt;registration&gt; 元素</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Windows&nbsp;脚本部件</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="leteleregistration"></A>&lt;registration&gt; 元素</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>定义用来将脚本部件注册为 COM 部件的信息。</P>

<PRE class="syntax">&lt;<B>registration</B> progid="<I>progID</I>" classid="<I>GUID" </I>description="<I>description</I>"
&nbsp;&nbsp;&nbsp;version="<I>version</I>" [remotable=<I>remoteFlag</I>]/<B>&gt;</B></PRE>

<P>&#0150;或者&#0150;</P>

<PRE class="syntax">&lt;<B>registration</B> progid="<I>progID</I>" classid="<I>GUID" </I>description="<I>description</I>"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;version="<I>version</I>" [remotable=<I>remoteFlag</I>]<B>&gt;</B>
<B>&nbsp;&nbsp;&nbsp;</B>&lt;script&gt;
<B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</B>&nbsp;(注册脚本或取消注册的脚本)
<B>&nbsp;&nbsp;&nbsp;</B>&lt;/script&gt;
<B>&lt;/registration&gt;</B></PRE>

<H4 class="dtH4">值</H4>

<DL>
<DT><I>progID</I></DT>

<DD>(可选项) 程序员在创建脚本部件的实例时，用来引用脚本部件的文本名称。例如，如果脚本部件的程序 ID 为 Component.MyComponent，则可以使用类似下面的语句在 Microsoft&reg; Visual Basic 中创建该脚本部件的一个实例：

<P><code class="ce">Set Component = CreateObject("Component.MyComponent")</code>


<BLOCKQUOTE class="dtBlock">
<b class="le">注意</b>&nbsp;&nbsp;&nbsp;尽管 progid 属性是可选的，但必须包括 progid 和 classid 属性两者之一（可以两个都包括）。如果只指定 progid 属性，将自动生成类 ID。如果只创建了类 ID，则不会注册 progid，且只能通过直接引用类 ID 来创建该对象。</BLOCKQUOTE>
</dd>

<DT><I>GUID</I></DT>

<DD>(可选项)&nbsp;使用类 ID 生成程序（如 Uuidgen.exe）生成的 GUID。如果没有包括类 ID，注册程序将给脚本部件指派一个类 ID。</dd>

<DT><I>description</I></DT>

<DD>(可选项)&nbsp;脚本部件的文本描述，将存储在注册表中，有些工具（如 Visual Basic 对象浏览器）将使用这个信息。</dd>

<DT><I>version</I></DT>

<DD>(可选项)&nbsp;指定的数字版本号码。在应用程序请求具体的版本名称时，将用一个句点把这个版本信息附加到程序 ID 后（例如， MyComponent.1)。只能使用数字（不允许十进制小数点）。

<BLOCKQUOTE class="dtBlock">
<B><b class="le">注意</b>&nbsp;&nbsp;&nbsp;</B>&lt;registration&gt; 元素中的注册信息顺序可以任意。</BLOCKQUOTE>
</dd>

<DT><I>remoteFlag</I></DT>

<DD>(可选项)&nbsp;一个 Boolean 值，指明是否可以使用 DCOM 远程实例化脚本部件。详细信息请参阅“在应用程序中使用脚本部件”主题中的<A HREF="letusingapp.htm#script_componentsmisccreatingremoteinsta">创建脚本部件的远程实例</A>。</dd>
</DL>

<H4 class="dtH4">说明</H4>

<P>在创建脚本部件之后，即可以使用 Regsvr32.exe 之类的程序来注册该脚本部件。这些程序读取 &lt;registration&gt; 元素中的信息，并将其写入计算机的 Windows 注册表。例如，可以用这种方式来注册一个脚本部件：</P>

<PRE class="code">regsvr32 file:\\myserver\MyComponent.wsc</PRE>

<BLOCKQUOTE class="dtBlock">
<B><b class="le">注意</b>&nbsp;&nbsp;&nbsp;</B>并不是所有情况都必须要 &lt;registration&gt; 元素。例如，如果脚本部件实现的是 Microsoft&reg; Internet Explorer 5.0 中的 DHTML Behavior 接口处理程序，则不需要注册，因为 Internet Explorer 将记录在页面上检测到的操作。关于注册要求的详细信息，请参阅所实现的接口处理程序的文档，并且还要注意在哪种主机上使用该脚本部件。</BLOCKQUOTE>

<P>如果没有包括类 ID 信息，注册程序将在注册脚本部件时为其指定一个类 ID。不过，这样在每个注册地该脚本部件将获得一个不同的类 ID。建议您自己为脚本部件提供一个类 ID，确保在所有注册该脚本部件的计算机上具有相同的类 ID。</P>

<P>如果与该脚本部件一起使用的开发工具要存储类 ID，则让注册程序创建类 ID 会产生问题。如果注册过程每次创建一个新的类 ID，就会与该应用程序所存储的 ID 不一致。</P>

<P>当注册脚本部件或取消注册时可以运行脚本。要做到这一点，只需在 &lt;registration&gt; 元素内包括一个 &lt;script&gt; 元素。要在注册起见运行脚本，就编写一个 register(&nbsp;) 函数。要在注消脚本部件后运行脚本，就包括一个 unregister(&nbsp;) 函数。</P>

<H4 class="dtH4">示例</H4>

<P>下面演示了一个典型的 &lt;registration&gt; 元素，其中同时包括了程序 ID 和类 ID。</P>

<PRE class="code">&lt;registration
   progid="Component.TestScript"
   classid="{2154c700-9253-11d1-a3ac-0aa0044eb5f}"
   description="My Test Component"
   version="1"/&gt;</PRE>

<P>下面的 registration 元素允许通过 DCOM 来实例化该脚本部件：</P>

<PRE class="code">&lt;registration&gt;
   progid="Component.TestScript"
   classid="{2154c700-9253-11d1-a3ac-0aa0044eb5f}"
   version="1"
   description="My Test Component"
   remotable=true/&gt;</PRE>

<P>下面的示例演示了一个包括脚本的 &lt;registration&gt; 元素，在注册该脚本部件或取消注册时将执行这些脚本。</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意</b>&nbsp;&nbsp;&nbsp;CDATA 项是必需的，以使 &lt;script&gt; 元素中的脚本成为不透明的。详细信息请参阅<A HREF="letxml.htm">脚本部件文件和 XML 一致性</A>。</BLOCKQUOTE>

<PRE class="code">&lt;registration
   progid="Component.TestScript"
   classid="{2154c700-9253-11d1-a3ac-0aa0044eb5f}"&gt;
   version="1"
   description="My Test Component"&gt;

   &lt;script language="VBScript"&gt;
      Function register()
         MsgBox "Component 'My Test Component' registered."
      End Function
      Function unregister()
         MsgBox "Component 'My Test Component' unregistered."
      End Function
   &lt;/script&gt;
   ]]&gt;
&lt;/registration&gt;</PRE>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="letcreatereg.htm">创建注册信息</A> | <A HREF="letregs.htm">注册脚本部件</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
