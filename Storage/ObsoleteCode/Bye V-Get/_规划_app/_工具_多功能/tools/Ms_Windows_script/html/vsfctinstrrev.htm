<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>InStrRev 函数</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Visual&nbsp;Basic&nbsp;Scripting&nbsp;Edition</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vsfctinstrrev"></A>InStrRev 函数</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>返回某字符串在另一个字符串中出现的从结尾计起的位置。</P>

<PRE class="syntax"><B>InStrRev(</B>string1, string2[, start[, compare]]<B>)</B></PRE>

<H4 class="dtH4">参数</H4>

<DL>
<DT><I>string1</I></DT>

<DD>必选项。接受搜索的字符串表达式。</dd>

<DT><I>string2</I></DT>

<DD>必选项。被搜索的字符串表达式。</dd>

<DT><I>Start</I></DT>

<DD>可选项。数值表达式，用于设置每次搜索的开始位置。如果省略，则默认值为 -1，表示从最后一个字符的位置开始搜索。如果 <B>start</B> 包含 Null，则出现错误</dd>

<DT><I>compare</I></DT>

<DD>可选项。在计算子字符串时，指示要使用的比较类型的数值。如果省略，将执行二进制比较。有关数值，请参阅“设置”部分。</dd>
</DL>

<H4 class="dtH4">设置</H4>

<P><B>compare</B> 参数可以有以下值：</P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=28%>常数</TH>
<TH width=12%>Value</TH>
<TH width=60%>描述</TH>
</TR>

<TR VALIGN="top">
<TD width=28%>vbBinaryCompare</TD>
<TD width=12%>0</TD>
<TD width=60%>执行二进制比较。</TD>
</TR>

<TR VALIGN="top">
<TD width=28%>vbDatabaseCompare</TD>
<TD width=12%>2</TD>
<TD width=60%>执行基于包含在数据库（在此数据库中执行比较）中的信息的比较。</TD>
</TR>
</table></div>

<H4 class="dtH4">返回值</H4>

<P>InStrRev 返回以下值：</P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=54%>如果</TH>
<TH width=46%>InStrRev 返回</TH>
</TR>

<TR VALIGN="top">
<TD width=54%>string1 为零长度</TD>
<TD width=46%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>string1 为 Null</TD>
<TD width=46%>Null</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>string2 为零长度</TD>
<TD width=46%>start</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>string2 为 Null</TD>
<TD width=46%>Null</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>string2 没有找到</TD>
<TD width=46%>0</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>在 string1 中找到 string2</TD>
<TD width=46%>找到匹配字符串的位置</TD>
</TR>

<TR VALIGN="top">
<TD width=54%>start &gt; Len(string2)</TD>
<TD width=46%>0</TD>
</TR>
</table></div>

<H4 class="dtH4">说明</H4>

<P>下面的示例利用 <B>InStrRev</B> 函数搜索字符串：</P>

<PRE class="code">Dim SearchString, SearchChar, MyPos
SearchString ="XXpXXpXXPXXP"   ' 要搜索的字符串。
SearchChar = "P"   ' Search for "P".
MyPos = <code><b class="cfe">InstrRev(</b></code>SearchString<code><b class="cfe">,</b></code> SearchChar<code><b class="cfe">,</b></code> 10<code><b class="cfe">,</b></code> 0<code><b class="cfe">)</b></code>   ' 在位置 10 进行的二进制比较。返回 9。
MyPos = <code><b class="cfe">InstrRev(</b></code>SearchString<code><b class="cfe">,</b></code> SearchChar<code><b class="cfe">,</b></code> -1<code><b class="cfe">,</b></code> 1<code><b class="cfe">)</b></code>   ' 在最后位置进行的文本比较。返回 12。
MyPos = <code><b class="cfe">InstrRev(</b></code>SearchString<code><b class="cfe">,</b></code> SearchChar<code><b class="cfe">,</b></code> 8<code><b class="cfe">)</b></code>   ' 默认情况下，进行的是二进制比较（省略最后的参数）。返回 0。</PRE>

<BLOCKQUOTE class="dtBlock">
<B><b class="le">注意</b>&nbsp;&nbsp;&nbsp;InStrRev</B> 函数的语法与 <B>InStr</B> 函数的语法并不一样。</BLOCKQUOTE>

<H4 class="dtH4">要求</H4>

<P><A HREF="vtoriversioninformation.htm">版本 2</A></P>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="vsfctinstr.htm">Instr 函数</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
