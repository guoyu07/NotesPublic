<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>&lt;property&gt; 元素</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Windows&nbsp;脚本部件</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="leteleproperty"></A>&lt;property&gt; 元素</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>声明一个属性。</P>

<PRE class="syntax">&lt;<B>property</B> name="<I>propertyName</I>" [internalName="<I>propertyVariable</I>"] /&gt;</PRE>

<P>&#0150;&nbsp;或者&nbsp;&#0150;</P>

<PRE class="syntax">&lt;<B>property</B> name="<I>propertyName</I>"&gt;
&nbsp;&nbsp;&nbsp;&lt;get [internalName="<I>getFunctionName</I>"] /&gt;
&nbsp;&nbsp;&nbsp;&lt;put [internalName="<I>putFunctionName</I>"] /&gt;
&lt;/<B>property</B>&gt;</PRE>

<H4 class="dtH4">值 </H4>

<DL>
<DT><I>propertyName</I></DT>

<DD>要说明的属性名称。除非指定了 internalName 属性，否则这个名称必须与将用来保存该属性值的全局变量的名称一致。</dd>

<DT><I>propertyVariable</I></DT>

<DD>(可选项)&nbsp;Scriptlet 文件<A HREF="letelescript.htm">&lt;script&gt;</A> 元素中的全局变量的名称，该变量将用来保存 <I>propertyName</I> 的值。如果没有包括 internalName 属性，属性值将保存在与 <I>propertyName</I> 名称同名的变量中。如果指定 internalName 属性，则可以使用一个不同的名称来代表该属性及其相应的全局变量。</dd>

<DT><I>getFunctionName</I></DT>

<DD>(可选项)&nbsp;用来读取属性值的过程名称。如果包括了 &lt;get&gt; 元素但没有包括 &lt;put&gt; 元素，该属性就是只读的。如果包括了 &lt;get&gt; 元素但没有指定 internalname 属性，那么用来读取属性值的方法的名称必须是该属性的名称加上 get_ 前缀（例如 get_lastname）。</dd>

<DT><I>putFunctionName</I></DT>

<DD>(可选项)&nbsp;用来写入属性值的过程名称。如果包括了 &lt;put&gt; 元素但没有包括 &lt;get&gt; 元素，该属性就是只写的。如果包括了 &lt;put&gt; 元素但没有指定 internalname 属性，那么用来写入属性值的方法的名称必须是该属性的名称加上 put_ 前缀（例如， put_lastname）。

<BLOCKQUOTE class="dtBlock">
<B><b class="le">提示</b>&nbsp;&nbsp;&nbsp;</B>在 XML，可以实现没有内容的元素 (如 &lt;property&gt; 元素)，方法是用 /&gt; 来结束元素。</BLOCKQUOTE>
</dd>
</DL>

<H4 class="dtH4">说明</H4>

<P>属性可以作为简单值来说明。在这种情况下，属性将作为脚本部件文件内的全局变量来处理。</P>

<P>也可以将属性作为过程（函数或子程序）来实现，这样可以计算属性的值，以及控制属性是否为只读、只写或是可读写的。在这种技术中，属性将在单独的 &lt;script&gt; 元素内作为过程（函数或子程序）实现。&lt;property&gt;元素将属性名称映射到用来实现该属性的过程。过程的名称必须与在 &lt;property&gt; 元素中指定的内部名称一致。</P>

<P>当调用 <I>putFunctionName</I> 时，该函数将传递一个参数，其中包含了用来设置给该属性的值。</P>

<P>除了以上所示的标准语法，您可以使用速记符号指定由子标记（child tags）添加的信息。例如,如果您想声明一个具有和属性相同名字的"get" 和 "put" 访问者属性，您可以使用以下语法：</P>

<PRE class="code">&lt;property name="myproperty" get put/&gt;</PRE>

<P>它在功能上相当于：</P>

<PRE class="code"><code><b class="cfe">&lt;property name="myproperty"&gt;
</b></code>&nbsp;&nbsp;&nbsp;&lt;get/&gt;
&nbsp;&nbsp;&nbsp;&lt;put/&gt;
<code><b class="cfe">&lt;/property&gt;</b></code></PRE>

<P>如果您想明确地不以默认名称命名这些访问者，您可以使用以下语法：</P>

<PRE class="code">&lt;property name="myproperty" get="testget" put="testput"/&gt;</PRE>

<P>要指定缺省属性，只需在 &lt;property&gt; 元素中包含 dispid="0" 这个属性。详细信息请参阅<A HREF="letexppro.htm">说明属性</A>。</P>

<H4 class="dtH4">示例</H4>

<P>下面的脚本部件片段演示了四个属性 (sname、age、dateOfBirth 以及 mstatus) 的定义。sname 属性为一个简单值。age 属性是只读的，由 readAge 函数实现。dateOfBirth 属性是可读写的，由 readDOB 和 writeDOB 两个函数实现。最后， mstatus 属性由缺省函数 get_mstatus 以及 put_mstatus 实现。</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意</b>&nbsp;&nbsp;&nbsp;CDATA 项是必需的，以使 &lt;script&gt; 元素中的脚本成为不透明的。详细信息请参阅<A HREF="letxml.htm">脚本部件文件和 XML 一致性</A>。</BLOCKQUOTE>

<PRE class="code">&lt;public&gt;
   &lt;property name="sname"/&gt;
   &lt;property name="age"&gt;
      &lt;get internalName="readAge"/&gt;
   &lt;/property&gt;
   &lt;property name="dateOfBirth"&gt;
      &lt;get internalName="readDOB"/&gt;
      &lt;put internalName="writeDOB"/&gt;
   &lt;/property&gt;
   &lt;property name="mstatus"&gt;
      &lt;get/&gt;
      &lt;put/&gt;
   &lt;/property&gt;
&lt;/public&gt;

&lt;script language="VBScript"&gt;
&lt;![CDATA[
Dim sname   ' 可读写的 sname 属性（没有函数）。
Dim gDOB   ' 用来保存出生日期的全局变量。
Dim gMStatus   ' 用来保存材料状态的全局变量。

Function readDOB()
   ' Gets value of dateOfBirth property.
   readDOB = gDOB
End Function

Function writeDOB(newDOB)
   ' 设置 dateOfBirth 属性的值。
   If isDate(gDOB) Then
      ' 错误检查。
      gDOB = newDOB
   End If
End Function

Function readAge()
   '计算只读 age 的属性。
   If isDate(gDOB) Then
      dobM = DatePart("m", gDOB)
      dobD = DatePart("d", gDOB)
      dobY = DatePart("yyyy", gDOB)
      todayY = DatePart("yyyy", Date)
      age = todayY - dobY

      ' 如果今年还没有过生日，则进行调整。
      bday = DateValue(dobM &amp; "/" &amp; dobD &amp; "/" &amp; todayY)
      If DateDiff("d", bday, DateValue(Date)) &lt; 0 Then
         age = age - 1
      End If
      readAge = age
   End If
End Function
      
Function get_mstatus()
   ' 读取 mstatus 属性的值。
   get_mstatus = gMStatus
End Function

Function put_mstatus(s)
   ' 写入 mstatus 属性的值。
   If s = "M" Or s = "S" Then
      gMStatus = s
   Else
      gMStatus = "?"
   End If
End Function
]]&gt;
&lt;/script&gt;</PRE>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="leteleevent.htm">&lt;event&gt; 元素</A> | <A HREF="letelemethod.htm">&lt;method&gt; 元素</A> | <A HREF="letexpevt.htm">说明事件</A> | <A HREF="letexpmth.htm">说明方法</A> | <A HREF="letexppro.htm">说明属性</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
