<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>使用 Windows 脚本文件 (.wsf)</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Windows&nbsp;脚本宿主</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="wsadvantagesofws"></A>使用 Windows 脚本文件 (.wsf)</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>Windows 脚本文件 (*.wsf) 是含有可扩展标记语言 (XML) 代码的文本文档。它综合了几个可增强脚本灵活性的功能。由于 Windows 脚本文件不是特定于引擎的，因此它们可包含与 Windows 脚本兼容的任何脚本引擎中的脚本。它们充当容器。</P>

<P>使用 .wsf 文件，可以在创建脚本时使用以下功能：</P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=50%>.wsf 文件支持</TH>
<TH width=50%>实现</TH>
</TR>

<TR VALIGN="top">
<TD width=50%>Include 语句</TD>
<TD width=50%>将函数从 VBScript 或 JScript 文件合并到 Windows 脚本宿主项目中。</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>多引擎</TD>
<TD width=50%>每个文件使用多种脚本语言。</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>类型库</TD>
<TD width=50%>将常数添加到代码中。</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>工具</TD>
<TD width=50%>使用任何 XML 编辑器编辑文件。</TD>
</TR>

<TR VALIGN="top">
<TD width=50%>一个文件中的多项作业</TD>
<TD width=50%>将所有的代码存储在一个位置。</TD>
</TR>
</table></div>

<H2 class="dtH2">Include 语句</H2>

<P>如果您的 .js 和 .vbs 文件来自以前版本的 Windows 脚本宿主项目，则 .wsf 文件允许您将它们用于 Windows 脚本宿主。.wsf 文件封装了一个可以被多个 .wsf 文件使用的函数库。</P>

<P>下面的示例显示包含 JScript 文件 (fso.js) 的.wsf 文件，以及在包含文件中调用函数 ("GetFreeSpace") 的 VBScript 函数。还显示 fso.js 的内容。</P>

<PRE class="code">&lt;job id="IncludeExample"&gt;
   &lt;script language="JScript" src="FSO.JS"/&gt;
   &lt;script language="VBScript"&gt;
      ' 获得驱动器 C 的可用空间。
      s = GetFreeSpace("c:")
      WScript.Echo s
   &lt;sScript&gt;
&lt;/job&gt;</PRE>

<P>fso.js 文件包含以下内容：</P>

<PRE class="code">function GetFreeSpace(drvPath) {
   var fs, d, s;
   fs = new ActiveXObject("Scripting.FileSystemObject");
   d = fs.GetDrive(fs.GetDriveName(drvPath));
   s = "Drive " + drvPath + " - " ;
   s += d.VolumeName;
   s += " Free Space: " + d.FreeSpace/1024 + " Kbytes";
   return s;
} </PRE>

<H2 class="dtH2">多引擎支持</H2>

<P>由于一种脚本语言不能涵盖用户需要的所有功能，因此 Windows 脚本宿主为您提供了可以在一个 .wsf 文件中结合使用多种语言的功能。下面的示例显示了同时包含 VBScript 和 PerlScript 代码的 .wsf 文件：</P>

<PRE class="code">&lt;job id="PERLandVBS"&gt;
&lt;script language="PerlScript"&gt;
sub PerlHello {
my $str = @_[0];
$WScript-&gt;Echo($str);
      }
&lt;/script&gt;

&lt;script language="VBScript"&gt;
WScript.Echo "Hello from VBScript"
PerlHello "Hello from PERLScript"
&lt;/script&gt;
&lt;/job&gt;</PRE>

<H2 class="dtH2">类型库支持</H2>

<P>在下面的示例中，"MyComponent" 是用 Microsoft Visual Basic 5.0 开发的。"MyComponent" 用以下语句定义了常数 <I>MyError</I>。</P>

<PRE class="code">Public Const MyError = "You are not using MyComponent correctly"</PRE>

<P>类型库包含在安装于 <code class="ce">C:\MyComponent</code> 下的 <code class="ce">mycomponent.lib </code>中。</P>

<PRE class="code">&lt;job id="IncludeExample"&gt;
&lt;reference progid="MyComponent.MyClass"&gt;
&lt;script language="VBScript"&gt;
Dim MyVar
Set MyVar = CreateObject("MyComponent.MyClass")
Currentreturn = MyVar.MyMethod
If Currentreturn = False then
WScript.Echo MyError
End If
&lt;/script&gt;
&lt;/job&gt;</PRE>

<H2 class="dtH2">工具支持</H2>

<P>由于 .wsf 文件采用 XML 格式，所以可以使用支持 XML 的任意编辑器来编辑 .wsf 文件。其中包括文本编辑器，如“记事本”。</P>

<H2 class="dtH2">一个文件中的多项作业</H2>

<P>不用将所有脚本分别保留在不同的文件中，可以将它们合并到一个.wsf 文件中，并分解成几个不同的作业。然后用与下例相似的语法分别运行各个作业，该示例中的 "MyFirstJob" 是 MyScripts.wsf 文件中包含的作业名称。</P>

<PRE class="code">CScript //Job:MyFirstJob MyScripts.wsf</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
