<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>说明方法</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Windows&nbsp;脚本部件</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="letexpmth"></A>说明方法</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>在 Windows&reg; 脚本部件文件中方法是作为函数或子例程实现的。</P>

<P class="labelproc"><B>要说明一个方法 </B>

<OL type="1">
	<LI>创建一个 <A HREF="letelepublic.htm">&lt;public&gt;</A> 元素，该元素应作为 <A HREF="letelescriptlet.htm">&lt;component&gt;</A> 元素的子元素。</li>

	<LI>在 &lt;public&gt; 元素中包括一个 <A HREF="letelemethod.htm">&lt;method&gt;</A> 方法。该方法元素可以选择性地包括一个或多个 &lt;parameter&gt; 元素来定义该方法的参数。</li>

	<LI>可以用任何一种脚本语言编写一个过程来实现该函数。该过程应放在一个 &lt;implements&gt; 元素外面的 <A HREF="letelescript.htm">&lt;script&gt;</A> 元素中，但应位于 &lt;component&gt; 元素内。请确保其函数名与 <I>functionName</I> 要一致，或者如果没有指定 <I>functionName</I>，则应该与在 &lt;method&gt; ;元素中指定的 <I>methodName</I> 名字一致。
<P>例如，下面的示例演示了具有两个方法的脚本部件文件片段，这两个方法分别为 factorial 和 getRandomNumber。

<BLOCKQUOTE class="dtBlock">
<b class="le">注意&nbsp;&nbsp;&nbsp;</b>CDATA 项是必需的，以使 &lt;script&gt; 元素中的脚本是不透明的。详细信息请参阅<A HREF="letxml.htm">脚本部件文件和 XML 一致性</A>。</BLOCKQUOTE>

<PRE class="code">&lt;public&gt;
&nbsp;&nbsp;&nbsp;&lt;method name="factorial"/&gt;
&nbsp;&nbsp;&nbsp;&lt;method name="random" internalName="getRandomNumber"&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code><b class="cfe">&lt;parameter name="upperBound"/&gt;</b></code>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code><b class="cfe">&lt;parameter name="seed"/&gt;</b></code>
&nbsp;&nbsp;&nbsp;&lt;/method&gt;
&lt;/public&gt;

&lt;script language="VBScript"&gt;
Function factorial(n)
&nbsp;&nbsp;&nbsp;&lt;![CDATA[
&nbsp;&nbsp;&nbsp;If isNumeric(n) Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If n &lt;= 1 Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factorial = 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factorial = n*factorial(n-1)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If
&nbsp;&nbsp;&nbsp;Else
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factorial = -2&nbsp;&nbsp;&nbsp;' Error code.
&nbsp;&nbsp;&nbsp;End If
End Function

Function getRandomNumber(upperBound, seed)
&nbsp;&nbsp;&nbsp;getRandomNumber = Cint(upperBound * Rnd(seed) + 1)
End Function
]]&gt;
&lt;/script&gt;</PRE>
</li>
</OL>

<P>可以给脚本部件指定一个缺省方法，以便宿主应用程序不必显式调用就可以使用该方法。例如，如果已声明了一个称为 factorial 的方法，并将其标记为缺省的，则可以在 Visual Basic 中用下述方式调用该函数：</P>

<PRE class="code">Set component = CreateObject("component.MyComponent")
n = component.factorial(4)&nbsp;&nbsp;&nbsp;' Calls factorial method explicitly.
n = component(4)&nbsp;&nbsp;&nbsp;' Calls factorial method as default.</PRE>

<P>要指定缺省方法，请包括一个将特殊的派遣标识符(<I>dispid</I>)指定给该方法的属性。关于 dispid 的详细信息，请参阅<A HREF="letexpevt.htm">说明事件</A>。</P>

<P class="labelproc"><B>要指定缺省方法 </B>

<UL type="disc">
	<LI>在 <A HREF="letelemethod.htm">&lt;method&gt;</A> 方法中，按下述示例所示包括属性 dispid="0"：
<PRE class="code">&lt;public&gt;
&nbsp;&nbsp;&nbsp;&lt;method name="factorial" dispid="0"/&gt;
&lt;/public&gt;</PRE>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意&nbsp;&nbsp;&nbsp;</b>这个技术可用来指定一个缺省方法或一个缺省属性，但不能同时指定。在脚本部件中只能有一个元素的 dispid 为零。</BLOCKQUOTE>
</li>
</UL>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="letexpevt.htm">说明事件</A> | <A HREF="letexppro.htm">说明属性</A> | <A HREF="letfilecont.htm">脚本部件文件的内容</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
