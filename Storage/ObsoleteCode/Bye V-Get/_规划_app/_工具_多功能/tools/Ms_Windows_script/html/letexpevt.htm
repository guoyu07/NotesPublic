<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>说明事件</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Windows&nbsp;脚本部件</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="letexpevt"></A>说明事件</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>要给 Windows&reg; 脚本部件来添加事件能力：

<UL type="disc">
	<LI>声明每一个希望能够激活的事件。</li>

	<LI>脚本部件在必要时调用一个函数来激活该事件。</li>
</UL>

<P>有些主机环境还会要求您生成一个类型库，主机需要这个类型库来绑定事件。详细信息请参阅<A HREF="letcreatetypelib.htm">创建脚本部件类型库</A>。</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意&nbsp;&nbsp;&nbsp;</b>Behavior 处理程序以一种略微不同的方式来说明事件。详细信息请参阅<A HREF="letexpcustom.htm">在 Behavior 脚本部件中说明自定义事件</A>。</BLOCKQUOTE>

<H2 class="dtH2">声明事件</H2>

<P>必须逐个地声明每个希望能够激活的事件。</P>

<P class="labelproc"><B>要声明一个事件 </B>

<OL type="1">
	<LI>创建一个 <A HREF="letelepublic.htm">&lt;public&gt;</A> 元素，该元素应作为 <A HREF="letelescriptlet.htm">&lt;component&gt;</A> 元素的子元素。</li>

	<LI>在 &lt;public&gt; 元素中，对每个要声明的事件包含一个 <A HREF="leteleevent.htm">&lt;event&gt;</A> 元素。</li>

	<LI>例如，下面的脚本部件片段演示了如何来说明两个事件：
<PRE class="code">&lt;public&gt;
&nbsp;&nbsp;&nbsp;&lt;property name="sname"/&gt;
&nbsp;&nbsp;&nbsp;&lt;method name="factorial"/&gt;
&nbsp;&nbsp;&nbsp;&lt;event name="namechanged"/&gt;
&nbsp;&nbsp;&nbsp;&lt;event name="querydone"/&gt;
&lt;/public&gt;</PRE>
</li>
</OL>

<H2 class="dtH2">指定派遣标识符</H2>

<P>COM 编程通过派遣标识符（称为 <I>dispid</I> ) 来提供事件通知，派遣标识符是指标识部件事件的整数值。dispid 在编译时被写入该部件的类型库，然后由宿主应用程序用来绑定到事件。</P>

<P>给脚本部件创建类型库的过程将自动为脚本部件的事件生成 dispid 。不过，如果您愿意，您可以指定自己的 dispid 。这样做的好处是： 

<UL type="disc">
	<LI>请保证脚本部件中的各个事件始终具有相同的 dispid 。如果由类型库生成程序指定 dispid,则在每次生成类型库时这些值可能会改变。</li>

	<LI>将脚本部件中的事件映射到特定号码的 dispid 。例如，如果想激活一个标准的 COM 事件，如错误通知，可以将事件映射到 COM 中惯常使用的值。</li>
</UL>

<P>要给事件指定一个 dispid，请在 <A HREF="leteleevent.htm">&lt;event&gt;</A> 元素中包括该 dispid 属性，如下例所示：</P>

<PRE class="code">&lt;public&gt;
&nbsp;&nbsp;&nbsp;&lt;event name="namechanged" dispid="22"&gt;
&lt;/public&gt;</PRE>

<P>Dispid 在脚本部件内必须是唯一的。您可以将一个为负数指定为 dispid，并映射到传统的事件，但必须使用指定的范围（如 -999 到 -500）加以控制。关于保留的 dispid 的范围的详细信息，请参阅 MSDN 库中的 DISPID 的文档。</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意&nbsp;&nbsp;&nbsp;</b>0 这个 dispid 号码用来标识缺省的方法或属性。详细信息请参阅<A HREF="letexpmth.htm">说明方法</A>和<A HREF="letexppro.htm">说明属性</A>。</BLOCKQUOTE>

<H2 class="dtH2">激活一个事件</H2>

<P>可以通过调用 fireEvent 方法并指定要激活的事件名来激活一个事件。不能激活没有在 &lt;implements&gt; ; 元素中声明的事件。可以激活脚本部件文件任何脚本中的事件。例如，下面演示了在属性值更改时如何激活事件。</P>

<PRE class="code">&lt;script language="VBScript"&gt;
&lt;![CDATA[
Sub put_lowercaseName(newLCName)
&nbsp;&nbsp;&nbsp;name = newLCName
&nbsp;&nbsp;&nbsp;fireEvent("namechanged")
End Sub
]]&gt;
&lt;/script&gt;</PRE>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="letexpcustom.htm">在 Behavior 脚本部件中说明自定义事件</A> | <A HREF="letexpmth.htm">说明方法</A> | <A HREF="letexppro.htm">说明属性</A> | <A HREF="lethandevents.htm">在宿主应用程序中处理脚本部件的事件</A> | <A HREF="letfilecont.htm">脚本部件文件的内容</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
