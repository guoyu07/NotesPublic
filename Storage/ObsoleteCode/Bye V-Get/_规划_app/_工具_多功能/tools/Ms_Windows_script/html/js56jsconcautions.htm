<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>脚本问题解答</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>JScript</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="js56jsconcautions"></A>脚本问题解答</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>如果不够细致，任何编程语言都有一些可能发生错误的地方，而且每种语言都有其特殊之处。例如，对于 null 值： JScript 中这个值与 C 或 C++ 语言中的 <B>Null</B> 值所起的作用是不一样的。</P>

<P>下面提供了一些在编写 JScript 脚本时可能遇到的问题。</P>

<H2 class="dtH2">语法错误</H2>

<P>由于编程语言中的语法比自然语言的语法要严格得多，因此在编写脚本时对细节应倍加关注。例如，如果您本意是将字符串作为某个参数，但是在键入时忘了使用引号引起来，就会产生问题。</P>

<H2 class="dtH2">脚本解释顺序</H2>

<P>对 JScript 的解释是 Web 浏览器的 HTML 语法分析处理的一部分。因此，如果在文档的 &lt;HEAD&gt; 标识中放置了一个脚本，则将在检查所有的 &lt;BODY&gt; 标识之前加以解释。如果在 &lt;BODY&gt; 标识中将创建对象，但由于在分析处理 &lt;HEAD&gt; 标识时这些对象尚不存在，因而不能被脚本操作。</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意&nbsp;&nbsp;&nbsp;</b>本情况特定于 IE。ASP 和 WSH 具有不同的运行模式（其他宿主亦是）。</BLOCKQUOTE>

<H2 class="dtH2">自动类型强制</H2>

<P>JScript 是一种具有自动强制的自由类型语言。因此，尽管实际上不同类型的值是不相等的，但对下述示例中的表达式求值都将得到 <B>true</B>。</P>

<PRE class="code">"100" == 100;
false == 0;</PRE>

<P>要核对类型与值都一致，用“严格相等”运算符（===）。下面两个表达式的值为 false：</P>

<PRE class="code">"100" === 100;
false === 0;</PRE>

<H2 class="dtH2">运算符优先级</H2>

<P>在对表达式求值时某个特定运算符的执行主要是根据<A HREF="js56jsconoperatorprecedence.htm">运算符优先级</A>，而不是表达式的位置。因此，在下面的示例中，乘法将先于减法执行，尽管在该表达式中第一个出现的运算符是减法。</P>

<PRE class="code">theRadius = aPerimeterPoint - theCenterpoint * theCorrectionFactor;</PRE>

<H2 class="dtH2">对对象使用 for...in 循环</H2>

<P>当使用 <A HREF="js56jsstmforin.htm">for...in</A> 循环对某个对象的属性进行遍历时，不必预先确定或管理将要指定给该循环计数器变量的对象字段的顺序。此外，在该语言的不同实现方案中该顺序可能会不一样。</P>

<H2 class="dtH2">with 关键字</H2>

<P><A HREF="js56jsstmwith.htm">with</A> 语句可以方便地用来引用某个特定对象中已有的属性，但是不能用来给对象添加属性。要给对象创建新的属性，必须明确地引用该对象。</P>

<H2 class="dtH2">this 关键字</H2>

<P>尽管可以在对象的定义范围内使用 <A HREF="js56jsstmthis.htm">this</A> 关键字来引用该对象本身，但是当函数不是该对象的定义时，就不能象普通情况那样使用 <B>this</B> 或类似的关键字来引用当前的执行函数。如果该函数被指定为某个对象的方法，则可以在该函数内使用 <B>this</B> 关键字来引用该对象。</P>

<H2 class="dtH2">编写一个脚本，该脚本在 IE 中写脚本</H2>

<P>当解释程序遇到 &lt;/SCRIPT&gt; 标记时会终止当前脚本。要显示 "&lt;/SCRIPT&gt;" 本身，请将其改写为至少两个字符串，例如 "&lt;/SCR" 和 "IPT&gt;"，这样就可以在输出语句中将其连接在一起。</P>

<H2 class="dtH2">IE 中的隐式窗口引用</H2>

<P>由于同时可以打开多个窗口，任何隐式的窗口引用都被指向当前窗口。对于其他窗口必须使用显式引用。</P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
