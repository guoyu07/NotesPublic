<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>实现 ASP 脚本部件</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Windows&nbsp;脚本部件</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="letimplasp"></A>实现 ASP 脚本部件</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>使用 Windows&reg; 脚本部件可以包括 Active Server Page (ASP) 的功能。这样做使您可以将服务器的脚本隔离在一个可以很容易从 ASP 页面调用的部件内，且有助于 ASP 代码的复用。例如，可能拥有若干个处理表格的 ASP 页面。但不必在每个 ASP 页面都直接实现所有的表格处理逻辑，因为所有 ASP 页面都可以调用一个已创建的具有表格处理逻辑的脚本部件。</P>

<P>要创建 ASP 脚本部件，只需按照<A HREF="letfilecont.htm">脚本部件文件的内容</A>中所描述的，正常创建一个脚本部件。使用 <A HREF="leteleimplements.htm">&lt;implements&gt;</A> 元素来实现 ASP 接口处理程序，即将&lt;implements&gt; 元素的 type 属性设置为 “ASP” 。这样就提供了访问 ASP 对象(Response, Request, Server, Session 以及 Application)的手段。在 ASP 脚本部件中，可以象直接在 ASP 页面内那样使用这些对象。ASP 接口处理程序已内置于脚本部件的运行时程序 (Scrobj.dll)，因此不需要外部接口处理程序。</P>

<P>脚本部件运行时，它将使用与调用它的 ASP 页面相同的命名空间。该脚本部件可以访问 Request 和 Server 对象，如同它就位于调用它的 ASP 页面。该脚本部件还可以访问相同的调用 ASP 页面的 Session 和 Application 变量。类似地，如果该 ASP 脚本部件调用了 Response 对象的一个方法，这些调用的结果在调用页面上也是可获得的。例如，如果调用 Response.Write，则结果将直接输出到调用的 ASP 页面。</P>

<P>下面演示了一个简单的 ASP 脚本部件，它说明了一个属性和一个方法。<B>applicationVar1</B> 属性可以取得假想的 Application 变量 Var1 的值。<B>AddDate</B> 方法则将当前日期输出到调用 ASP 页面。</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意&nbsp;&nbsp;&nbsp;</b>CDATA 项是必需的，它使 &lt;script&gt; 元素中的脚本成为不透明的。详细信息请参阅<A HREF="letxml.htm">脚本部件文件和 XML 一致性</A>。</BLOCKQUOTE>

<PRE class="code">&lt;component id="ASPScriptlet"&gt;
&lt;registration progid="ASPScriptlet"/&gt;

&lt;public&gt;
&nbsp;&nbsp;&nbsp;&lt;property name="applicationVar1"/&gt;
&nbsp;&nbsp;&nbsp;&lt;method name="AddDate"/&gt;
&lt;/public&gt;

&lt;implements type="ASP"/&gt;
&lt;script language="VBScript"&gt;
&lt;![CDATA[
dim applicationVar1
applicationVar1 = Application("Var1")
Sub AddDate()
&nbsp;&nbsp;&nbsp;Response.Write(Date)
End Sub
]]&gt;
&lt;/script&gt;
&lt;/component&gt;</PRE>

<P>对 ASP 页面的调用如下：</P>

<PRE class="code">&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Testing the Script Components ASP Handler&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY BGCOLOR="#FFFFFF"&gt;
&lt;H1&gt;Testing the ASP Handler&lt;/H1&gt;
<code><b class="cfe">&lt;%Set wscASP = CreateObject("ASPScriptlet")%&gt;</b></code>
&lt;P&gt;The current date is &lt;%= wscASP.AddDate()%&gt;&lt;/P&gt;

&lt;P&gt;The value of the Application(Var1) variable is &lt;%= wscASP.applicationVar1%&gt;&lt;/P&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
