<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>FileSystemObject 示例代码</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>脚本运行时库</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="sgfsosample"></A>FileSystemObject 示例代码</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>在本节描述的示例代码，提供真实的例子来示范在 <B>FileSystemObject</B> 对象模型中可用的许多功能。该代码显示了如何一起使用对象模型的所有功能，以及如何在您自己的代码中有效地使用这些功能。</P>

<P>请注意，由于该代码是极一般的，所以要使该代码能够真正在您的机器上运行，可能需要一些其他代码和小小的变更。这些改变之所以必要，是因为在 Active Server Pages 和 Windows Scripting Host 之间，为输入和输出给用户采用了不同的方法。</P>

<P>要在 Active Server Pages 上运行该代码，则采取以下步骤：</P>

<P>创建一个标准的 Web 页，后缀名为 .asp。</P>

<P>把下面的示例代码复制到 &lt;BODY&gt;...&lt;/BODY&gt; 标记之间的文件中。</P>

<P>把所有代码包装器到 &lt;%...%&gt; 标记内。</P>

<P>把 <B>Option Explicit</B> 语句从当前位置移动到 HTML 页的最顶部，甚至在 &lt;HTML&gt; 开始标记前。</P>

<P>把 &lt;%...%&gt; 标记放置在 <B>Option Explicit</B> 语句周围，以保证它在服务器端运行。</P>

<P>把下面的代码添加到示例代码末尾： </P>

<PRE class="code">Sub Print(x)
   Response.Write "&lt;PRE&gt;&amp;ltFONT FACE=""Courier New"" SIZE=""1""&gt;"
   Response.Write x
   Response.Write "&lt;/FONT&gt;&lt;/PRE&gt;"
End Sub
Main</PRE>

<P>前面的代码增加一个将在服务器端运行，但在客户端显示结果的打印过程。要在 Windows Scripting Host 上运行该代码，则把下面的代码添加到示例代码的末尾： </P>

<PRE class="code">Sub Print(x)
   WScript.Echo x
End Sub
Main</PRE>

<P>下面就是示例代码：</P>

<PRE class="code">''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' FileSystemObject 示例代码
'Copyright 1998  Microsoft Corporation。 保留所有权利。
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Option Explicit

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 对于代码质量：
' 1) 下面的代码有许多字符串操作，用"&amp;"运算符来把短字符串连接在一起。由于
'    字符串连接是费时的，所以这是一种低效率的写代码方法。无论如何，它是
'    一种非常好维护的写代码方法，并且在这儿使用了这种方法，因为该程序执行
'    大量的磁盘操作，而磁盘操作比连接字符串所需的内存操作要慢得多。
'    记住这是示范代码，而不是产品代码。
'
' 2) 使用了 "Option Explicit"，因为访问声明过的变量，比访问未声明的变量要
'    稍微快一些。它还能阻止在代码中发生错误，例如，把 DriveTypeCDROM 误拼
'    成了 DriveTypeCDORM 。
'
' 3) 为了使代码更可读，该代码中没有错误处理。虽然采取了防范措施，来保证代码
'    在普通情况下没有错误，但文件系统是不可预知的。在产品代码中，使用
'    On Error Resume Next 和 Err 对象来捕获可能发生的错误。
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 一些容易取得的全局变量
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim TabStop
Dim NewLine

Const TestDrive = "C"
Const TestFilePath = "C:\Test"

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 由 Drive.DriveType 返回的常数
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Const DriveTypeRemovable = 1
Const DriveTypeFixed = 2
Const DriveTypeNetwork = 3
Const DriveTypeCDROM = 4
Const DriveTypeRAMDisk = 5

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 由 File.Attributes 返回的常数
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Const FileAttrNormal  = 0
Const FileAttrReadOnly = 1
Const FileAttrHidden = 2
Const FileAttrSystem = 4
Const FileAttrVolume = 8
Const FileAttrDirectory = 16
Const FileAttrArchive = 32 
Const FileAttrAlias = 64
Const FileAttrCompressed = 128

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 用来打开文件的常数
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Const OpenFileForReading = 1 
Const OpenFileForWriting = 2 
Const OpenFileForAppending = 8 

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">ShowDriveType</b></code>
' 目的： 
' 生成一个字符串，来描述给定 Drive 对象的驱动器类型。
' 示范下面的内容
' - Drive.DriveType
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Function ShowDriveType(Drive)

   Dim S
   
   Select Case Drive.DriveType
   Case DriveTypeRemovable
      S = "Removable"
   Case DriveTypeFixed
      S = "Fixed"
   Case DriveTypeNetwork
      S = "Network"
   Case DriveTypeCDROM
      S = "CD-ROM"
   Case DriveTypeRAMDisk
      S = "RAM Disk"
   Case Else
      S = "Unknown"
   End Select

   ShowDriveType = S

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">ShowFileAttr</b></code>
' 目的： 
' 生成一个字符串，来描述文件或文件夹的属性。
' 示范下面的内容
' - File.Attributes
' - Folder.Attributes
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function ShowFileAttr(File) ' File 可以是文件或文件夹

   Dim S
   Dim Attr
   
   Attr = File.Attributes

   If Attr = 0 Then
      ShowFileAttr = "Normal"
      Exit Function
   End If

   If Attr And FileAttrDirectory Then S = S &amp; "Directory "
   If Attr And FileAttrReadOnly Then S = S &amp; "Read-Only "
   If Attr And FileAttrHidden Then S = S &amp; "Hidden "
   If Attr And FileAttrSystem Then S = S &amp; "System "
   If Attr And FileAttrVolume Then S = S &amp; "Volume "
   If Attr And FileAttrArchive Then S = S &amp; "Archive "
   If Attr And FileAttrAlias Then S = S &amp; "Alias "
   If Attr And FileAttrCompressed Then S = S &amp; "Compressed "

   ShowFileAttr = S

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">GenerateDriveInformation</b></code>
' 目的： 
' 生成一个字符串，来描述可用驱动器的当前状态。
' 示范下面的内容
'  - FileSystemObject.Drives 
'  - Iterating the Drives collection
'  - Drives.Count
'  - Drive.AvailableSpace
'  - Drive.DriveLetter
'  - Drive.DriveType
'  - Drive.FileSystem
'  - Drive.FreeSpace
'  - Drive.IsReady
'  - Drive.Path
'  - Drive.SerialNumber
'  - Drive.ShareName
'  - Drive.TotalSize
'  - Drive.VolumeName
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function GenerateDriveInformation(FSO)

   Dim Drives
   Dim Drive
   Dim S

   Set Drives = FSO.Drives
   S = "Number of drives:" &amp; TabStop &amp; Drives.Count &amp; NewLine &amp; NewLine

   ' 构造报告的第一行。
   S = S &amp; String(2, TabStop) &amp; "Drive" 
   S = S &amp; String(3, TabStop) &amp; "File" 
   S = S &amp; TabStop &amp; "Total"
   S = S &amp; TabStop &amp; "Free"
   S = S &amp; TabStop &amp; "Available" 
   S = S &amp; TabStop &amp; "Serial" &amp; NewLine

   ' 构造报告的第二行。
   S = S &amp; "Letter"
   S = S &amp; TabStop &amp; "Path"
   S = S &amp; TabStop &amp; "Type"
   S = S &amp; TabStop &amp; "Ready?"
   S = S &amp; TabStop &amp; "Name"
   S = S &amp; TabStop &amp; "System"
   S = S &amp; TabStop &amp; "Space"
   S = S &amp; TabStop &amp; "Space"
   S = S &amp; TabStop &amp; "Space"
   S = S &amp; TabStop &amp; "Number" &amp; NewLine   

   ' 分隔行。
   S = S &amp; String(105, "-") &amp; NewLine

   For Each Drive In Drives
      S = S &amp; Drive.DriveLetter
      S = S &amp; TabStop &amp; Drive.Path
      S = S &amp; TabStop &amp; ShowDriveType(Drive)
      S = S &amp; TabStop &amp; Drive.IsReady

      If Drive.IsReady Then
         If DriveTypeNetwork = Drive.DriveType Then
            S = S &amp; TabStop &amp; Drive.ShareName 
         Else
            S = S &amp; TabStop &amp; Drive.VolumeName 
         End If
         S = S &amp; TabStop &amp; Drive.FileSystem
         S = S &amp; TabStop &amp; Drive.TotalSize
         S = S &amp; TabStop &amp; Drive.FreeSpace
         S = S &amp; TabStop &amp; Drive.AvailableSpace
         S = S &amp; TabStop &amp; Hex(Drive.SerialNumber)
      End If

      S = S &amp; NewLine

   Next

   GenerateDriveInformation = S

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">GenerateFileInformation</b></code>
' 目的： 
' 生成一个字符串，来描述文件的当前状态。
' 示范下面的内容
'  - File.Path
'  - File.Name
'  - File.Type
'  - File.DateCreated
'  - File.DateLastAccessed
'  - File.DateLastModified
'  - File.Size
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function GenerateFileInformation(File)

   Dim S

   S = NewLine &amp; "Path:" &amp; TabStop &amp; File.Path
   S = S &amp; NewLine &amp; "Name:" &amp; TabStop &amp; File.Name
   S = S &amp; NewLine &amp; "Type:" &amp; TabStop &amp; File.Type
   S = S &amp; NewLine &amp; "Attribs:" &amp; TabStop &amp; ShowFileAttr(File)
   S = S &amp; NewLine &amp; "Created:" &amp; TabStop &amp; File.DateCreated
   S = S &amp; NewLine &amp; "Accessed:" &amp; TabStop &amp; File.DateLastAccessed
   S = S &amp; NewLine &amp; "Modified:" &amp; TabStop &amp; File.DateLastModified
   S = S &amp; NewLine &amp; "Size" &amp; TabStop &amp; File.Size &amp; NewLine

   GenerateFileInformation = S

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">GenerateFolderInformation</b></code>
' 目的： 
' 生成一个字符串，来描述文件夹的当前状态。
' 示范下面的内容
'  - Folder.Path
'  - Folder.Name
'  - Folder.DateCreated
'  - Folder.DateLastAccessed
'  - Folder.DateLastModified
'  - Folder.Size
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function GenerateFolderInformation(Folder)

   Dim S

   S = "Path:" &amp; TabStop &amp; Folder.Path
   S = S &amp; NewLine &amp; "Name:" &amp; TabStop &amp; Folder.Name
   S = S &amp; NewLine &amp; "Attribs:" &amp; TabStop &amp; ShowFileAttr(Folder)
   S = S &amp; NewLine &amp; "Created:" &amp; TabStop &amp; Folder.DateCreated
   S = S &amp; NewLine &amp; "Accessed:" &amp; TabStop &amp; Folder.DateLastAccessed
   S = S &amp; NewLine &amp; "Modified:" &amp; TabStop &amp; Folder.DateLastModified
   S = S &amp; NewLine &amp; "Size:" &amp; TabStop &amp; Folder.Size &amp; NewLine

   GenerateFolderInformation = S

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">GenerateAllFolderInformation</b></code>
' 目的： 
' 生成一个字符串，来描述一个文件夹和所有文件及子文件夹的当前状态。
' 示范下面的内容
'  - Folder.Path
'  - Folder.SubFolders
'  - Folders.Count
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function GenerateAllFolderInformation(Folder)

   Dim S
   Dim SubFolders
   Dim SubFolder
   Dim Files
   Dim File

   S = "Folder:" &amp; TabStop &amp; Folder.Path &amp; NewLine &amp; NewLine
   Set Files = Folder.Files

   If 1 = Files.Count Then
      S = S &amp; "There is 1 file" &amp; NewLine
   Else
      S = S &amp; "There are " &amp; Files.Count &amp; " files" &amp; NewLine
   End If

   If Files.Count &lt;&gt; 0 Then
      For Each File In Files
         S = S &amp; GenerateFileInformation(File)
      Next
   End If

   Set SubFolders = Folder.SubFolders

   If 1 = SubFolders.Count Then
      S = S &amp; NewLine &amp; "There is 1 sub folder" &amp; NewLine &amp; NewLine
   Else
      S = S &amp; NewLine &amp; "There are " &amp; SubFolders.Count &amp; " sub folders" _
      NewLine &amp; NewLine
   End If

   If SubFolders.Count &lt;&gt; 0 Then
      For Each SubFolder In SubFolders
         S = S &amp; GenerateFolderInformation(SubFolder)
      Next
      S = S &amp; NewLine
      For Each SubFolder In SubFolders
         S = S &amp; GenerateAllFolderInformation(SubFolder)
      Next
   End If

   GenerateAllFolderInformation = S

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">GenerateTestInformation</b></code>
' 目的： 
'    生成一个字符串，来描述 C:\Test 文件夹和所有文件及子文件夹的当前状态。
' 示范下面的内容
'  - FileSystemObject.DriveExists
'  - FileSystemObject.FolderExists
'  - FileSystemObject.GetFolder
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function GenerateTestInformation(FSO)

   Dim TestFolder
   Dim S

   If Not FSO.DriveExists(TestDrive) Then Exit Function
   If Not FSO.FolderExists(TestFilePath) Then Exit Function

   Set TestFolder = FSO.GetFolder(TestFilePath)

   GenerateTestInformation = GenerateAllFolderInformation(TestFolder) 

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">DeleteTestDirectory</b></code>
' 目的： 
'    清理 test 目录。
' 示范下面的内容
'  - FileSystemObject.GetFolder
'  - FileSystemObject.DeleteFile
'  - FileSystemObject.DeleteFolder
'  - Folder.Delete
'  - File.Delete
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub DeleteTestDirectory(FSO)

   Dim TestFolder
   Dim SubFolder
   Dim File</PRE>



<PRE class="code">   <A NAME="driveinfo"></A>
   ' 有两种方法可用来删除文件：

   FSO.DeleteFile(TestFilePath &amp; "\Beatles\OctopusGarden.txt")

   Set File = FSO.GetFile(TestFilePath &amp; "\Beatles\BathroomWindow.txt")
   File.Delete   

   ' 有两种方法可用来删除文件夹：
   FSO.DeleteFolder(TestFilePath &amp; "\Beatles")
   FSO.DeleteFile(TestFilePath &amp; "\ReadMe.txt")
   Set TestFolder = FSO.GetFolder(TestFilePath)
   TestFolder.Delete

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">CreateLyrics</b></code>
' 目的： 
'    在文件夹中创建两个文本文件。
' 示范下面的内容
'  - FileSystemObject.CreateTextFile
'  - TextStream.WriteLine
'  - TextStream.Write
'  - TextStream.WriteBlankLines
'  - TextStream.Close
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub CreateLyrics(Folder)

   Dim TextStream</PRE>



<PRE class="code">   <A NAME="deletefile"></A>
   Set TextStream = Folder.CreateTextFile("OctopusGarden.txt")</PRE>



<PRE class="code">   <A NAME="createtextfilewritetofile"></A>
   ' 请注意这不会将一行添加到文件中。
   TextStream.Write("Octopus' Garden ") 
   TextStream.WriteLine("(by Ringo Starr)")
   TextStream.WriteBlankLines(1)
   TextStream.WriteLine("I'd like to be under the sea in an octopus' garden in the shade,")
   TextStream.WriteLine("He'd let us in, knows where we've been -- in his octopus' garden in the shade.")
   TextStream.WriteBlankLines(2)
   
   TextStream.Close

   Set TextStream = Folder.CreateTextFile("BathroomWindow.txt")
   TextStream.WriteLine("She Came In Through The Bathroom Window (by Lennon/McCartney)")
   TextStream.WriteLine("")
   TextStream.WriteLine("She came in through the bathroom window protected by a silver spoon")
   TextStream.WriteLine("But now she sucks her thumb and wanders by the banks of her own lagoon")
   TextStream.WriteBlankLines(2)
   TextStream.Close

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">GetLyrics</b></code>
' 目的： 
'    显示 lyrics 文件的内容。
' 示范下面的内容
'  - FileSystemObject.OpenTextFile
'  - FileSystemObject.GetFile
'  - TextStream.ReadAll
'  - TextStream.Close
'  - File.OpenAsTextStream
'  - TextStream.AtEndOfStream
'  - TextStream.ReadLine
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function GetLyrics(FSO)

   Dim TextStream
   Dim S
   Dim File

   ' 有多种方法可用来打开一个文本文件，和多种方法来从文件读取数据。
   ' 这儿用了两种方法来打开文件和读取文件：

   Set TextStream = FSO.OpenTextFile(TestFilePath &amp; "\Beatles\OctopusGarden.txt", OpenFileForReading)</PRE>



<PRE class="code">   <A NAME="closereadfromfile"></A>
   S = TextStream.ReadAll &amp; NewLine &amp; NewLine
   TextStream.Close

   Set File = FSO.GetFile(TestFilePath &amp; "\Beatles\BathroomWindow.txt")
   Set TextStream = File.OpenAsTextStream(OpenFileForReading)
   Do    While Not TextStream.AtEndOfStream
      S = S &amp; TextStream.ReadLine &amp; NewLine
   Loop
   TextStream.Close

   GetLyrics = S
   
End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">BuildTestDirectory</b></code>
' 目的： 
'    创建一个目录分层结构来示范 FileSystemObject。
'    以这样的次序来创建分层结构：
'       C:\Test
'       C:\Test\ReadMe.txt
'       C:\Test\Beatles
'       C:\Test\Beatles\OctopusGarden.txt
'       C:\Test\Beatles\BathroomWindow.txt
' 示范下面的内容
'  - FileSystemObject.DriveExists
'  - FileSystemObject.FolderExists
'  - FileSystemObject.CreateFolder
'  - FileSystemObject.CreateTextFile
'  - Folders.Add
'  - Folder.CreateTextFile
'  - TextStream.WriteLine
'  - TextStream.Close
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Function BuildTestDirectory(FSO)

   Dim TestFolder
   Dim SubFolders
   Dim SubFolder
   Dim TextStream

   ' 排除(a)驱动器不存在，
   ' 或(b)要创建的目录已经存在的情况。

   If Not FSO.DriveExists(TestDrive) Then
      BuildTestDirectory = False
      Exit Function
   End If

   If FSO.FolderExists(TestFilePath) Then
      BuildTestDirectory = False
      Exit Function
   End If

   Set TestFolder = FSO.CreateFolder(TestFilePath)

   Set TextStream = FSO.CreateTextFile(TestFilePath &amp; "\ReadMe.txt")
   TextStream.WriteLine("My song lyrics collection")
   TextStream.Close

   Set SubFolders = TestFolder.SubFolders
   Set SubFolder = SubFolders.Add("Beatles")
   CreateLyrics SubFolder   
   BuildTestDirectory = True

End Function

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' <code><b class="cfe">主程序</b></code>
' 首先，它创建一个 test 目录，以及一些子文件夹和文件。
' 然后，它转储有关可用磁盘驱动器和 test 目录的某些信息，
' 最后，清除 test 目录及其所有内容。
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub Main

   Dim FSO

   ' 设立全局变量。
   TabStop = Chr(9)
   NewLine = Chr(10)</PRE>



<PRE class="code">   <A NAME="folderinfo"></A>
   Set FSO = CreateObject("Scripting.FileSystemObject")

   If Not BuildTestDirectory(FSO) Then 
      Print "Test directory already exists or cannot be created.   Cannot continue."
      Exit Sub
   End If

   Print GenerateDriveInformation(FSO) &amp; NewLine &amp; NewLine
   Print GenerateTestInformation(FSO) &amp; NewLine &amp; NewLine
   Print GetLyrics(FSO) &amp; NewLine &amp; NewLine
   DeleteTestDirectory(FSO)

End Sub</PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
