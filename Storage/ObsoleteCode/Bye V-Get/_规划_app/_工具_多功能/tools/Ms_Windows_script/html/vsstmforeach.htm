<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>For Each...Next 语句</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Visual&nbsp;Basic&nbsp;Scripting&nbsp;Edition</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vsstmforeach"></A>For Each...Next 语句</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>对数组或集合中的每个元素重复执行一组语句。</P>

<PRE class="syntax"><B>For Each</B> element In group
[statements]
[Exit For]
[statements]
<B>Next </B>[element]</PRE>

<H4 class="dtH4">参数</H4>

<DL>
<DT><I>element</I></DT>

<DD>用来枚举集合或数组中所有元素的变量。对于集合，<B>element</B> 可能是 <B>Variant</B> 变量、通用 <B>Object</B> 变量或任意指定的 Automation 对象变量。对于数组，<B>element</B> 只能是 <B>Variant</B> 变量。</dd>

<DT><I>group</I></DT>

<DD>对象集合或数组的名称。</dd>

<DT><I>statements</I></DT>

<DD>对于 <B>group</B> 中的每一项执行的一条或多条语句。</dd>
</DL>

<H4 class="dtH4">说明</H4>

<P>如果 <B>group</B> 中有至少一个元素，就会进入 <B>For Each</B> 块执行。一旦进入循环，便首先对 <B>group</B> 中第一个元素执行循环中的所有语句。只要 <B>group</B> 中还有其他的元素，就会对每个元素执行循环中的语句。当 <B>group</B> 中的没有其他元素时退出循环，然后从 <B>Next</B> 语句之后的语句继续执行。</P>

<P><B>Exit For</B> 只能用于 <B>For Each...Next</B> 或 <B>For...Next</B> 控制结构中，提供另一种退出循环的方法。可在循环的任意位置放置任意个 <B>Exit For</B> 语句。<B>Exit For</B> 经常和条件判断语句一起使用（例如 <B>If...Then</B>），并立即将控制权转移到 <B>Next</B> 之后的语句。</P>

<P>可以将一个 <B>For Each...Next</B> 循环放置在另一个之中，组成嵌套式 <B>For Each...Next</B> 循环。但是每个循环的 <B>element</B> 必须是唯一的。</P>

<BLOCKQUOTE class="dtBlock">
<b class="le">注意&nbsp;&nbsp;&nbsp;</b>如果省略 <B>Next</B> 语句中的 <B>element</B>，则程序仍会象已包含它一样继续执行。如果 <B>Next</B> 语句在其相应的 <B>For</B> 语句之前出现，则会产生错误。</BLOCKQUOTE>

<P>下面例子举例说明如何使用 <B>For Each...Next</B> 语句: </P>

<PRE class="code">Function ShowFolderList(folderspec)
   Dim fso, f, f1, fc, s
   Set fso = CreateObject("Scripting.FileSystemObject")
   Set f = fso.GetFolder(folderspec)
   Set fc = f.Files
   <code><b class="cfe">For Each</b></code> f1 <code><b class="cfe">in</b></code> fc
      s = s &amp; f1.name 
      s = s &amp; "&lt;BR&gt;"
   Next
  ShowFolderList = s
End Function</PRE>

<H4 class="dtH4">要求</H4>

<P><A HREF="vtoriversioninformation.htm">版本 2</A></P>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="vsstmdo.htm">Do...Loop 语句</A> | <A HREF="vsstmexit.htm">Exit 语句</A> | <A HREF="vsstmfor.htm">For...Next 语句</A> | <A HREF="vsstmwhile.htm">While...Wend 语句</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
