<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>caller 属性</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>JScript</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="js56jsprocaller"></A>caller 属性</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>返回一个对函数的引用，该函数调用了当前函数。</P>

<PRE class="syntax"><I>functionName</I>.<B>caller</B> </PRE>

<P>functionName 对象是所执行函数的名称。</P>

<H4 class="dtH4">说明</H4>

<P>对于函数来说，<B>caller</B> 属性只有在函数执行时才有定义。如果函数是由 JScript 程序的顶层调用的，那么 <B>caller</B> 包含的就是 <B>null</B> 。</P>

<P>如果在字符串上下文中使用 <B>caller</B> 属性，那么结果和 <I>functionName</I>.<B>toString</B> 一样，也就是说，显示的是函数的反编译文本。</P>

<P>下面的例子说明了 <B>caller</B> 属性的用法：</P>

<PRE class="code">function CallLevel(){
   if (<code><b class="cfe">CallLevel.caller</b></code> == null)
      return("CallLevel was called from the top level.");
   else
      return("CallLevel was called by another function.");
}</PRE>

<H4 class="dtH4">要求</H4>

<P><A HREF="js56jsoriversioninformation.htm">版本2</A></P>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="js56jsstmfunction.htm">function 语句</A></P>

<P>应用于：<A HREF="js56jsobjfunction.htm">Function 对象</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
