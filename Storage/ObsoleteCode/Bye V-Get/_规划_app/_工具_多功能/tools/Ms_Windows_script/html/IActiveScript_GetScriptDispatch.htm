<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IActiveScript::GetScriptDispatch</title>
<META NAME="msdnID" CONTENT="_638920">
<META NAME="MS-GlueFolder" CONTENT="3935"><style>@import url("MS-ITS:dsmsdn.chm::/html/msdn_ie4.css");</style>
<link rel="stylesheet" href="MS-ITS:dsmsdn.chm::/html/msdn_ie3.css">
<META NAME=MS-HAID CONTENT="IActiveScript_GetScriptDispatch">
<meta NAME="MS-HKWD" CONTENT="component development">
<meta NAME="MS-HKWD" CONTENT="IActiveScript::GetScriptDispatch">
<meta NAME="MS-HKWD" CONTENT="IActiveScript">
<meta NAME="MS-HKWD" CONTENT="GetScriptDispatch">
<META NAME="Description" CONTENT="IActiveScript::GetScriptDispatch">
<META NAME="Keywords" CONTENT="Component Development;IActiveScript::GetScriptDispatch;IActiveScript;GetScriptDispatch">
<META NAME="Platform" CONTENT="Windows, Win95, WinNT">
<meta NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<meta NAME="PRODUCT" CONTENT="Windows Script Interfaces">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">

<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">


</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#0033CC">

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<font FACE="Verdana, Arial, Helvetica" SIZE="2">

<table BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="100%">
  <tr VALIGN="TOP">
    <td WIDTH="360"><font SIZE="1" COLOR="#660033">Microsoft&#174; Windows&#174; Script Interfaces</font><br>
    <font SIZE="4" COLOR="#000000"><b>IActiveScript::GetScriptDispatch</b></font></td>
    <td ALIGN="RIGHT"><font SIZE="1">&nbsp;<a HREF="reference.htm">Language&nbsp;Reference</a><br>
    <A HREF="IActiveScript_GetCurrentScriptThreadID.htm">Previous</a><br>
    <A HREF="IActiveScript_GetScriptSite.htm">Next</a><P></font></td>
  </tr>
</table>
<hr noshade SIZE="1">
<BLOCKQUOTE>

<PRE><FONT FACE="Courier New" SIZE=3><code>HRESULT GetScriptDispatch(
    LPCOLESTR pstrItemName  // address of item name
    IDispatch **ppdisp      // receives IDispatch pointer
);
</code></PRE></FONT>

<P>Retrieves the <b>IDispatch</b> interface for the methods and properties associated with the currently running script.

<UL>
<LI>Returns one of the following values:
<p>
<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD"><TD><Font Size=2><b>Return Value</b></Font></TD><TD><Font Size=2><b>Meaning</b></Font></TD>

<TR VALIGN=TOP><TD><FONT SIZE=2>S_OK
 </FONT></TD><TD><FONT SIZE=2>Success.
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT SIZE=2>E_INVALIDARG
 </FONT></TD><TD><FONT SIZE=2>An argument was invalid.
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT SIZE=2>E_POINTER
 </FONT></TD><TD><FONT SIZE=2>An invalid pointer was specified.
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT SIZE=2>E_UNEXPECTED
 </FONT></TD><TD><FONT SIZE=2>The call was not expected (for example, the scripting engine has not yet been loaded or initialized).
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT SIZE=2>S_FALSE
 </FONT></TD><TD><FONT SIZE=2>The scripting engine does not support a dispatch object; the <I>ppdisp</I> parameter is set to NULL.
</FONT></TD></TR></TABLE>
</UL>
<DL><DT><I>pstrItemName</I>
 </DT><DD>[in] Address of a buffer that contains the name of the item for which the caller needs the associated dispatch object. If this parameter is NULL, the dispatch object contains as its members all of the global methods and properties defined by the script. Through the <b>IDispatch</b> interface and the associated <b>ITypeInfo</b> interface, the host can invoke script methods or view and modify script variables.
</DD><DT><I>ppdisp</I>
 </DT><DD>[out] Address of a variable that receives a pointer to the object associated with the script's global methods and properties. If the scripting engine does not support such an object, NULL is returned.
</DD></DL>

<P>Because methods and properties can be added by calling the <A HREF="IActiveScriptParse.htm#IActiveScriptParse">IActiveScriptParse</A> interface, the <b>IDispatch</b> interface returned by this method can dynamically support new methods and properties. Similarly, the <b>IDispatch::GetTypeInfo</b> method should return a new, unique <b>ITypeInfo</b> interface when methods and properties are added. Note, however, that language engines must not change the <B>IDispatch</B> interface in a way that is incompatible with any previous <B>ITypeInfo</B> interface returned. That implies, for example, that DISPIDs will never be reused.
</blockquote>
<hr noshade size=1>
<!--COPYRIGHT BEGIN--><!--COPYRIGHT END-->
</FONT>
</BODY>
</HTML>
