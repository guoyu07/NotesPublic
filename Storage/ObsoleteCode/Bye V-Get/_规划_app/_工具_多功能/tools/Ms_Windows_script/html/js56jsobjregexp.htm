<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>RegExp 对象</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>JScript</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="js56jsobjregexp"></A>RegExp 对象</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>保存有关正则表达式模式匹配信息的固有全局对象。</P>

<PRE class="syntax"><B>RegExp</B>.<I>property</I></PRE>

<P>必选项 <I>property</I> 参数是 <B>RegExp</B> 对象的任意一个属性。</P>

<H4 class="dtH4">说明</H4>

<P><B>RegExp</B> 对象不能直接创建，但始终可以使用。在成功的正则表达式查找完成之前，<B>RegExp</B> 对象各属性的初始值如下所示：</P>
<div class="tablediv"><table cellspacing="0" class="dtTABLE">

<TR VALIGN="top">
<TH width=39%>属性</TH>
<TH width=22%>简写</TH>
<TH width=39%>初始值</TH>
</TR>

<TR VALIGN="top">
<TD width=39%>index</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>-1</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>lastIndex</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>-1</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>lastMatch </TD>
<TD width=22%>$&amp;</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>lastParen </TD>
<TD width=22%>$+</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>leftContext</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>rightContext</TD>
<TD width=22%>&nbsp;</TD>
<TD width=39%>空字符串。</TD>
</TR>

<TR VALIGN="top">
<TD width=39%>$1 - $9 </TD>
<TD width=22%>$1 - $9</TD>
<TD width=39%>空字符串。</TD>
</TR>
</table></div>

<P>在成功的正则表达式查找完成之前，其属性值为 undefined。</P>

<P>不要将全局 <B>RegExp</B> 对象与<B>正则表达式</B>对象混淆。尽管听起来像是一回事，但它们是截然不同的。全局 <B>RegExp</B> 对象的属性包含不断更新的关于每个匹配出现的信息，而<B>正则表达式</B>对象只包含出现<B>正则表达式</B>匹配的信息。</P>

<H4 class="dtH4">示例</H4>

<P>下面的例子演示了全局 <B>RegExp</B> 对象的用法。</P>

<PRE class="code">function matchDemo(){
   var s;
   var re = new RegExp("d(b+)(d)","ig");
   var str = "cdbBdbsbdbdz";
   var arr = re.exec(str);
   s = "$1 contains: " + <code><b class="cfe">RegExp.$1</b></code> + "\n";
   s += "$2 contains: " + <code><b class="cfe">RegExp.$2</b></code> + "\n";
   s += "$3 contains: " + <code><b class="cfe">RegExp.$3</b></code>;
   return(s);
}</PRE>



<H4 class="dtH4"><A NAME="js56jsobjregexpprop"></A>属性</H4>

<P><A HREF="js56jspromatches.htm">$1...$9 属性</A> | <A HREF="js56jsproindex.htm">index 属性</A> | <A HREF="js56jsproinput.htm">input 属性</A> | <A HREF="js56jsprolastindex.htm">lastIndex 属性</A> | <A HREF="js56jsprolastmatch.htm">lastMatch 属性</A> | <A HREF="js56jsprolastparen.htm">lastParen 属性</A> | <A HREF="js56jsproleftcontext.htm">leftContext 属性</A> | <A HREF="js56jsprorightcontext.htm" CLASS="POPUP">rightContext 属性</A></P>

<H4 class="dtH4">方法</H4>

<P><B>RegExp</B> 对象没有方法。</P>

<H4 class="dtH4">要求</H4>

<P><A HREF="js56jsoriversioninformation.htm">版本 3</A> </P>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="js56jsobjregexpression.htm">正则表达式对象</A> | <A HREF="js56jsgrpregexpsyntax.htm">正则达式语法</A> | <A HREF="js56jsobjstring.htm">String 对象</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
