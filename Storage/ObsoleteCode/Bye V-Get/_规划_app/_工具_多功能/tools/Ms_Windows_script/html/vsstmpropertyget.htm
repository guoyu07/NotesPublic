<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>Property Get 语句</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>Visual&nbsp;Basic&nbsp;Scripting&nbsp;Edition</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="vsstmpropertyget"></A>Property Get 语句</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>在 <B>Class</B> 块中，声明构成用来取得（返回）属性值的<B> Property </B>过程的主体的名称、参数和代码。</P>

<PRE class="syntax"> [<B>Public</B> [<B>Default</B>]| <B>Private</B>] <B>Property Get</B> <I>name</I> <B>[(</B><I>arglist</I><B>)</B>]
&nbsp;&nbsp;&nbsp;&nbsp;[<I>statements</I>]
&nbsp;&nbsp;&nbsp;&nbsp;[[<B>Set</B>] <I>name</I> = <I>expression</I>]
&nbsp;&nbsp;&nbsp;&nbsp;[<B>Exit Property</B>] 
&nbsp;&nbsp;&nbsp;&nbsp;[<I>statements</I>]
&nbsp;&nbsp;&nbsp;&nbsp;[[<B>Set</B>] <I>name</I> = <I>expression</I>]
<B>End Property</B> </PRE>

<H4 class="dtH4">参数</H4>

<DL>
<DT><I>Public</I></DT>

<DD>表明<B>Property Get</B> 过程可以被所有脚本中的其他过程访问。</dd>

<DT><I>Default</I></DT>

<DD>只与 <B>Public</B> 关键字一起使用，表明 <B>Property Get</B> 过程中定义的属性为类的缺省属性。</dd>

<DT><I>Private</I></DT>

<DD>表明 <B>Property Get</B> 过程只对定义它的 <B>Class</B> 块中的其他过程是可以访问的。</dd>

<DT><I>name</I></DT>

<DD><B>Property Get</B> 过程的名称；遵守标准的变量命名规则，区别仅仅在于它可以与同一<B>Class</B>块中的<B>Property Let</B> 或 <B>Property Set</B>过程。</dd>

<DT><I>arglist</I></DT>

<DD>该变量列表代表了 <B>Property Get</B> 过程被调用时传递给它的参数。多个参数之间用逗号分隔开。<B>Property Get</B> 过程中的每个参数的名称必须与 <B>Property Let</B> 过程中的相应参数相同(如果有的话)。</dd>

<DT><I>statements</I></DT>

<DD>任意的一组语句，将在 <B>Property Get</B> 过程的主体中执行。</dd>

<DT><I>Set</I></DT>

<DD>在将对象作为 <B>Property Get</B> 过程的返回值时使用的关键字。</dd>

<DT><I>expression</I></DT>

<DD>Property Get 过程的返回值。</dd>
</DL>

<H4 class="dtH4">说明</H4>

<P>如果未使用 Public 或 Private 明确声明，则 <B>Property Get</B> 过程被缺省为公有的，即它们对于脚本中的其他所有过程都是可见的。<B>Property Get</B>过程中的局部变量的值在不同的过程调用之间是不保存的。</P>

<P>在其他任何过程(例如 Function 或 Property Let) 内部都不能定义 Property Get 过程。</P>

<P>Exit Property 语句将导致立即从 Property Get 过程中退出。程序将继续执行调用 Property Get 过程的语句之后的程序。Exit Property 语句可以出现在 Property Get 过程中的任何位置，次数不限。</P>

<P>与<B>Sub</B> 和 <B>Property Let</B> 过程类似，<B>Property Get</B> 过程是能够接受参数的过程，可以执行一系列的语句，以及改变参数的值。然而，与<B>Sub</B> 和 <B>Property Let</B> 不同的是，<B>Property Get</B> 过程可以被用于表达式的右侧，用与使用<B>Function</B> 或属性名称相同的方式来返回属性的值。</P>

<H4 class="dtH4">要求</H4>

<P><A HREF="vtoriversioninformation.htm">版本 5</A></P>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="vsstmclass.htm">Class 语句</A> | <A HREF="vsstmdim.htm">Dim 语句</A> | <A HREF="vsstmexit.htm">Exit 语句</A> | <A HREF="vsstmfunction.htm">Function 语句</A> | <A HREF="vsstmprivate.htm">Private 语句</A> | <A HREF="vsstmpropertylet.htm">Property Let 语句</A> | <A HREF="vsstmpropertyset.htm">Property Set 语句</A> | <A HREF="vsstmpublic.htm">Public 语句</A> | <A HREF="vsstmset.htm">Set 语句</A> | <A HREF="vsstmsub.htm">Sub 语句</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
