<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>函数外有 'return' 语句</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>JScript</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="js56jserrreturnstatementoutsideoffunction"></A>函数外有 'return' 语句</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>在代码的全部范围内使用。<B>return</B> 语句只能出现在函数体内。</P>

<P>使用 <B>()</B> 运算符调用函数是一个表达式。所有的表达式都有值；<B>return</B> 语句用来指定由函数返回的值。通常的形式是：</P>

<PRE class="code"><B>return </B>[ <I>expression</I> ];</PRE>

<P>当执行到 <B>return</B> 语句时，首先对该表达式求值并将其返回作为该函数的值。如果没有表达式，则返回 <B>undefined </B>。</P>

<P>当 <B>return</B> 语句执行完毕后，该函数的执行就终止了，即使还有函数体中仍有其它语句。这个规则的一个例外是如果该 <B>return </B>语句发生在某个 <B>try </B>块内，且有相应的 <B>finally </B>块，那么 在该函数返回前将执行 <B>finally </B>块中的代码。</P>

<P>如果函数是由于到达函数体结束处而不是因为执行return语句返回，则返回值为 <B>undefined</B>（表示该函数的结果无法作为大表达式的部分。</P>

<P class="labelproc"><B>要改正此错误</B></P>

<P>从代码的主要部分中删除 <B>return</B> 语句。（全部范围）。</P>

<H4 class="dtH4">请参阅</H4>

<P><A HREF="js56jsstmreturn.htm">return 语句</A> | <A HREF="js56jsobjfunction.htm">Function 对象</A> | <A HREF="js56jsprocaller.htm">caller 属性</A></P>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
