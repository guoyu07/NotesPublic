<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML DIR="LTR"><HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=gb2312">
<TITLE>设计 FileSystemObject</TITLE>
<!--CSS_START-->
<SCRIPT SRC="../scripts/vs70.js"></SCRIPT>
<SCRIPT SRC="../scripts/vs70link.js"></SCRIPT>
<!--CSS_END--></HEAD>
<body topmargin=0 id="bodyID" class = "dtBODY">

<!--NONSCROLLING BANNER START-->
<div id="nsbanner">
<div id="bannerrow1">
<TABLE CLASS="bannerparthead" CELLSPACING=0>
<TR ID="hdr">
<TD CLASS="runninghead" nowrap>脚本运行时库</TD>
<TD CLASS="product" nowrap>&nbsp;</TD>
</TR>
</TABLE>
</div>
<div id="TitleRow">
<H1 class="dtH1"><A NAME="sgprogrammingfilesystemobject"></A>设计 FileSystemObject</H1>
</div></div>
<!--NONSCROLLING BANNER END-->
<DIV id="nstext" valign="bottom">
<P>要用 <B>FileSystemObject</B> (FSO) 对象模型来编程，则：

<UL type="disc">
	<LI>使用 CreateObject 方法来创建 FileSystemObject 对象。</li>

	<LI>在新创建的对象上使用适当的方法。</li>

	<LI>访问对象的属性。</li>
</UL>

<P>FSO 对象模型包含在 Scripting 类型库中，该库位于 Scrrun.dll 文件中。因而，要使用 FSO 对象模型，必须把 Scrrun.dll 放在 Web 服务器的适当系统目录中。</P>

<H2 class="dtH2">创建 FileSystemObject 对象</H2>

<P>首先，使用 <B>CreateObject</B> 方法来创建 <B>FileSystemObject</B> 对象。</P>

<P>下面代码显示如何创建 <B>FileSystemObject</B> 实例： </P>

<PRE class="code"><SPAN class="lang">[VBScript]
</SPAN>Dim fso
Set fso = CreateObject("Scripting.FileSystemObject")
<SPAN class="lang">[JScript]
</SPAN>var fso;
fso = new ActiveXObject("Scripting.FileSystemObject");</PRE>

<P>在这两个示例中，<B>Scripting</B> 是类型库的名字，而 <B>FileSystemObject</B> 则是想要创建的对象的名字。可以只创建 <B>FileSystemObject</B> 对象的一个实例，而不管试图创建另一个实例的次数。</P>

<H2 class="dtH2">使用适当的方法</H2>

<P>其次，使用 <B>FileSystemObject</B> 对象的适当方法。例如，要创建一个新的对象，则使用 <B>CreateTextFile</B> 或 <B>CreateFolder</B> （FSO 对象模型不支持驱动器的创建或删除）。</P>

<P>要删除对象，则使用 <B>FileSystemObject</B> 对象的 <B>DeleteFile</B> 和 <B>DeleteFolder</B> 方法，或 <B>File</B> 和 <B>Folder</B> 对象的 <B>Delete</B> 方法。也可以使用适当的方法，来复制和移动文件与文件夹。</P>

<BLOCKQUOTE class="dtBlock">
<B><b class="le">注意</b>&nbsp;&nbsp;&nbsp;FileSystemObject</B> 对象模型中的某些功能是多余的。例如，可以用 <B>FileSystemObject</B> 对象的 <B>CopyFile</B> 方法，也可以用 <B>File</B> 对象的 <B>Copy</B> 方法来复制文件。这两种方法功能是相同的；两种方法都能使编程灵活。</BLOCKQUOTE>

<H2 class="dtH2">访问现有驱动器、文件和文件夹</H2>

<P>要访问现有驱动器、文件或文件夹，则使用 <B>FileSystemObject</B> 对象中的适当的 "get" 方法：

<UL type="disc">
	<LI>GetDrive </li>

	<LI>GetFolder </li>

	<LI>GetFile </li>
</UL>

<P>若要访问现有文件：</P>

<PRE class="code"><SPAN class="lang">[VBScript]
</SPAN>Dim fso, f1
Set fso = CreateObject("Scripting.FileSystemObject")
Set f1 = fso.GetFile("c:\test.txt")
<SPAN class="lang">[JScript]
</SPAN>var fso, f1;
fso = new ActiveXObject("Scripting.FileSystemObject");
f1 = fso.GetFile("c:\\test.txt");</PRE>

<P>不要对新创建的对象使用 "get" 方法，因为 "create" 函数已经返回那个对象的一个句柄。例如，如果使用 <B>CreateFolder</B> 方法创建了一个新的文件夹，则不要使用 <B>GetFolder</B> 方法来访问它的属性，如 <B>Name</B>、<B>Path</B>、<B>Size</B>等等。只需设一个变量给 <B>CreateFolder</B> 函数，来获得新创建文件夹的句柄名，然后访问它的属性、方法和事件。</P>

<P>若要为 <B>CreateFolder</B> 函数创建变量，请使用该语法：</P>

<PRE class="code"><SPAN class="lang">[VBScript]
</SPAN>Sub CreateFolder
   Dim fso, fldr
   Set fso = CreateObject("Scripting.FileSystemObject")
   Set fldr = fso.CreateFolder("C:\MyTest")
   Response.Write "Created folder: " &amp; fldr.Name
End Sub
<SPAN class="lang">[JScript]
</SPAN>function CreateFolder()
{
   var fso, fldr;
   fso = new ActiveXObject("Scripting.FileSystemObject");
   fldr = fso.CreateFolder("C:\\MyTest");
   Response.Write("Created folder: " + fldr.Name);
}</PRE>

<H2 class="dtH2">访问对象的属性</H2>

<P>一旦有了对象的句柄，就可以访问它的属性。例如，要获得特定文件夹的名字，首先创建该对象的一个实例，然后用适当的方法获得它的句柄（在这个例子中是 <B>GetFolder</B> 方法，因为该文件夹已经存在了）。</P>

<P>用该代码来获得 <B>GetFolder</B> 方法的一个句柄：</P>

<PRE class="code"><SPAN class="lang">[VBScript]
</SPAN>Set fldr = fso.GetFolder("c:\")
<SPAN class="lang">[JScript]
</SPAN>var fldr = fso.GetFolder("c:\\");</PRE>

<P>现在，已经有了 <B>Folder</B> 对象的句柄，就可以检查它的 <B>Name</B> 属性了。</P>

<PRE class="code"><SPAN class="lang">[VBScript]
</SPAN>Response.Write "Folder name is: " &amp; fldr.Name
<SPAN class="lang">[JScript]
</SPAN>Response.Write("Folder name is: " + fldr.Name);</PRE>

<P>要找出最后一次修改文件的时间，则使用下面的语法：</P>

<PRE class="code"><SPAN class="lang">[VBScript]
</SPAN>Dim fso, f1
Set fso = CreateObject("Scripting.FileSystemObject")
' 获得要查询的 File 对象。
Set f1 = fso.GetFile("c:\detlog.txt")   
' 打印信息。
Response.Write "File last modified: " &amp; f1.DateLastModified 
<SPAN class="lang">[JScript]</SPAN>
var fso, f1;
fso = new ActiveXObject("Scripting.FileSystemObject");
// 获得要查询的 File 对象。
f1 = fso.GetFile("c:\\detlog.txt");   
// 打印信息。
Response.Write("File last modified: " + f1.DateLastModified); </PRE>
<!--Footer Start-->
<DIV CLASS="footer">
<br>
<HR><!--Copyright-->
<p>&copy; 2001 Microsoft Corporation. 保留所有权利。</p></div> <!--Closes the footer div-->
</div> <!--closes the topic content div-->
<!--FOOTER_END-->
</BODY>
</HTML>
