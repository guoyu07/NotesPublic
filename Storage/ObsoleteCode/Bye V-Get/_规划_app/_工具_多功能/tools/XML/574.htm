<html>
<head>
<title>本章小结</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">

<link rel = stylesheet href = "image/style.css">
</head>
<body bgcolor="#ffffff">
<table width="688" border="0" cellspacing="0" cellpadding="0" align="center">
  <tr bgcolor="EEEEEE"> 
    <td height="22"><a href="index.htm">主页</a></td>
  </tr>
</table><br>
<table border="0" cellpadding="0" cellspacing="0" width="688" align="center" height="490">
  <tr valign="top"> 
    <td rowspan="4" width="91">&nbsp; </td>
    <td height="68" width="131"> 
      <p><img src="image/doc.gif"></p>
    </td>
    <td rowspan="4" width="18"><b></b> </td>
    <td height="68" width="387"><img src="image/title_doc.gif"></td>
    <td rowspan="4" width="61"> 
      <h6>&nbsp;</h6>
    </td>
  </tr>
  <tr valign="top"> 
    <td rowspan="3" valign="top" class="pt10" align="center" width="131" bgcolor="EEEEEE"> 
      <p>&nbsp;</p>
      <p><font color="#FF0000">※ 18.4 本章小结</font></p>
       
	</td>
  </tr>
  <tr valign="top"> 
    <td width="387" height="308"> 
      <table width="100%" border="0" cellpadding="0">
        <tr> 
          <td>

           <h4><a name="_Toc467209221">18.4 本章小结</a></h4>
<p></p>
<p>本章解释了如何使用命名域。特别是学习了如下内容：</p>
<ul>
  <p>
  <li>命名域区别不同XML应用程序中相同名称的元素和特性。</li>
  <p></p>
  <p>
  <li>命名域是由xmlns特性（其值为命名域的URI）来声明的。由该URI引用的文档可以不存在。</li>
  <p></p>
  <p>
  <li>与命名域相关联的前缀是xmlns特性名的组成部分，而此命名域前面有一冒号；例如xmlns:prefix。</li>
  <p></p>
  <p>
  <li>加到所有元素和特性名中的前缀属于由前缀表征的命名域。</li>
  <p></p>
  <p>
  <li>如果xmlns特性没有前缀，那么它就为元素及该元素的子元素（但不为任何特性）建立一个缺省的命名域。</li>
  <p></p>
  <p>
  <li>DTD必须以这样的方式来编写，以使对命名域一无所知的处理程序仍能分析并验证此文档的合法性。</li>
  <p></p>
</ul>
<p>下一章将探讨资源描述框架（Resource Description Framework，RDF），它是个XML应用程序，用于编译元数据（metadata）和信息结构。</p>
<p></p>
 
<a href='573.htm'>&lt;&lt;上一篇</a>&nbsp;&nbsp; </td>
        </tr>
      </table>
      <p>&nbsp; </p>
    </td>
  </tr>
</table>

</body>

</html>
