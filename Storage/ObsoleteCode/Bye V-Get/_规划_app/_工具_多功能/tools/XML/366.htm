<html>
<head>
<title>本章小结</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">

<link rel = stylesheet href = "image/style.css">
</head>
<body bgcolor="#ffffff">
<table width="688" border="0" cellspacing="0" cellpadding="0" align="center">
  <tr bgcolor="EEEEEE"> 
    <td height="22"><a href="index.htm">主页</a></td>
  </tr>
</table><br>
<table border="0" cellpadding="0" cellspacing="0" width="688" align="center" height="490">
  <tr valign="top"> 
    <td rowspan="4" width="91">&nbsp; </td>
    <td height="68" width="131"> 
      <p><img src="image/doc.gif"></p>
    </td>
    <td rowspan="4" width="18"><b></b> </td>
    <td height="68" width="387"><img src="image/title_doc.gif"></td>
    <td rowspan="4" width="61"> 
      <h6>&nbsp;</h6>
    </td>
  </tr>
  <tr valign="top"> 
    <td rowspan="3" valign="top" class="pt10" align="center" width="131" bgcolor="EEEEEE"> 
      <p>&nbsp;</p>
      <p><font color="#FF0000">※ 5.5 本章小结</font></p>
       
	</td>
  </tr>
  <tr valign="top"> 
    <td width="387" height="308"> 
      <table width="100%" border="0" cellpadding="0">
        <tr> 
          <td>

           <h4>5.5 本章小结</h4>
<P>在本章中，读者看到了从头创建的XML文档的示例。特别是学到如下内容：</P>

<UL>
<P><LI>信息可以保存在元素的属性中。</LI><p></P>
<P><LI>属性是包含在元素起始标记中的一个名字-数值对。</LI><p></P>
<P><LI>属性主要用来保存关于元素的元信息，而不是元素的数据。</LI><p></P>
<P><LI>属性比元素内容更不便处理。</LI><p></P>
<P><LI>对于非常简单并且不随文档改变其形式的信息，使用属性较好。特别是样式信息和链接信息，作为属性执行起来很顺利。</LI><p></P>
<P><LI>空标记给没有内容的元素提供了句法修饰。</LI><p></P>
<P><LI>XSL是一种功能强大的样式单语言，使我们能够访问和显示属性数据和转换文档。</LI><p></P></UL>

<P>下一章将详细介绍结构完整的XML文档必须严格遵循的规则。我们还将研究另外一些在XML文档中嵌入信息如注释和处理命令的方法。</P> 
<a href='365.htm'>&lt;&lt;上一篇</a>&nbsp;&nbsp;<a href='368.htm'>下一篇&gt;&gt;</a></td>
        </tr>
      </table>
      <p>&nbsp; </p>
    </td>
  </tr>
</table>

</body>

</html>
