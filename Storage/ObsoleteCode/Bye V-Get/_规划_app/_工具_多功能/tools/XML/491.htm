<html>
<head>
<title>选择</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">

<link rel = stylesheet href = "image/style.css">
</head>
<body bgcolor="#ffffff">
<table width="688" border="0" cellspacing="0" cellpadding="0" align="center">
  <tr bgcolor="EEEEEE"> 
    <td height="22"><a href="index.htm">主页</a></td>
  </tr>
</table><br>
<table border="0" cellpadding="0" cellspacing="0" width="688" align="center" height="490">
  <tr valign="top"> 
    <td rowspan="4" width="91">&nbsp; </td>
    <td height="68" width="131"> 
      <p><img src="image/doc.gif"></p>
    </td>
    <td rowspan="4" width="18"><b></b> </td>
    <td height="68" width="387"><img src="image/title_doc.gif"></td>
    <td rowspan="4" width="61"> 
      <h6>&nbsp;</h6>
    </td>
  </tr>
  <tr valign="top"> 
    <td rowspan="3" valign="top" class="pt10" align="center" width="131" bgcolor="EEEEEE"> 
      <p>&nbsp;</p>
      <p><font color="#FF0000">※ 14.18 选择</font></p>
       
	</td>
  </tr>
  <tr valign="top"> 
    <td width="387" height="308"> 
      <table width="100%" border="0" cellpadding="0">
        <tr> 
          <td>

           <h4><a name="_Toc467207182">14.18 选择</a></h4>
<p>XSL提供了根据输入文档来改变输出内容的两个元素。xsl:if元素根据输入文档中存在的模式，决定是否输出给定的XML段。xsl:choose元素根据输入文档中存在的模式，从几个可能的XML段中挑选一个。使用xsl:if和xsl:choose来完成的大部分任务也需要通过应用适当的模板来实现。但有时，使用xsl:if或xsl:choose来解决问题会更简单、更有效。</p>
<h5><a name="_Toc467207183">14.18.1 xsl:if</a></h5>
<p>xsl:if元素提供了根据模式来改变输出文档的简单途径。xsl:if的test特性含有选择表达式，用来计算布尔值。如果此表达式为true，即输出xsl:if元素的内容；否则，不输出xsl:if元素的内容。例如下面的模板取消所有ATOM元素的名称。除列表中的最后一个元素外，在所有的元素后加入一个逗号和一个空格。</p>
<p>&lt;xsl:template match="ATOM"&gt;</p>
<p> &lt;xsl:value-of select="NAME"/&gt;</p>
<p> &lt;xsl:if test="not(position()=last())"&gt;, &lt;/xsl:if&gt;</p>
<p>&lt;/xsl:template&gt;</p>
<p>本模板确保列表类似于“Hydrogen, Helium”样子，而不是“Hydrogen, Helium, ”的样子。</p>
<p>不存在xsl:else或xsl:else-if元素。xsl:choose元素提供了这一功能。</p>
<h5><a name="_Toc467207184">14.18.2 xsl:choose</a></h5>
<p>根据几个可能的条件，xsl:choose元素从几个的输出结果中选择一个。xsl:when子元素提供各种条件及其相关的输出模板。xsl:when元素test特性为布尔值的选择表达式。如果多个条件都为真，那么只显示第一个为真的条件。如果xsl:when元素都不为真，那么显示xsl:otherwise子元素的内容。例如，下面的规则根据ATOM元素的STATE特性是为SOLID、LIQUID还是GAS，来改变输出文档的颜色：</p>
<p>&lt;xsl:template match=”ATOM”&gt;</p>
<p> &lt;xsl:choose&gt;</p>
<p> &lt;xsl:when test=”@STATE=’SOLID’ “&gt;</p>
<p> &lt;P style=”color:black”&gt;</p>
<p> &lt;xsl:value-of select=”.”/&gt;</p>
<p> &lt;/P&gt;</p>
<p> &lt;/xsl:when&gt;</p>
<p> &lt;xsl:when test=”@STATE=’LIQUID”’&gt;</p>
<p> &lt;P style=”color:blue”&gt;</p>
<p> &lt;xsl:value-of select=”.”/&gt;</p>
<p> &lt;/P&gt;</p>
<p> &lt;/xsl:when&gt;</p>
<p> &lt;xsl:when test=”@STATE=’GAS”’&gt;</p>
<p> &lt;P style=”color:red”&gt;</p>
<p> &lt;xsl:value-of select=”.”/&gt;</p>
<p> &lt;/P&gt;</p>
<p> &lt;/xsl:when&gt;</p>
<p> &lt;xsl:other&gt;</p>
<p> &lt;P style=”color:green”&gt;</p>
<p> &lt;xsl:value-of select=”.”/&gt;</p>
<p> &lt;/P&gt;</p>
<p> &lt;/xsl:other&gt;</p>
<p> &lt;/xsl:choose&gt;</p>
<p>&lt;/xsl:template&gt;</p>
 
<a href='490.htm'>&lt;&lt;上一篇</a>&nbsp;&nbsp;<a href='492.htm'>下一篇&gt;&gt;</a></td>
        </tr>
      </table>
      <p>&nbsp; </p>
    </td>
  </tr>
</table>

</body>

</html>
