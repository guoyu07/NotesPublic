<html>
<head>
<title>使用xsl:value-of来计算节点值</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">

<link rel = stylesheet href = "image/style.css">
</head>
<body bgcolor="#ffffff">
<table width="688" border="0" cellspacing="0" cellpadding="0" align="center">
  <tr bgcolor="EEEEEE"> 
    <td height="22"><a href="index.htm">主页</a></td>
  </tr>
</table><br>
<table border="0" cellpadding="0" cellspacing="0" width="688" align="center" height="490">
  <tr valign="top"> 
    <td rowspan="4" width="91">&nbsp; </td>
    <td height="68" width="131"> 
      <p><img src="image/doc.gif"></p>
    </td>
    <td rowspan="4" width="18"><b></b> </td>
    <td height="68" width="387"><img src="image/title_doc.gif"></td>
    <td rowspan="4" width="61"> 
      <h6>&nbsp;</h6>
    </td>
  </tr>
  <tr valign="top"> 
    <td rowspan="3" valign="top" class="pt10" align="center" width="131" bgcolor="EEEEEE"> 
      <p>&nbsp;</p>
      <p><font color="#FF0000">※ 14.4 使用xsl:value-of来计算节点值</font></p>
       
	</td>
  </tr>
  <tr valign="top"> 
    <td width="387" height="308"> 
      <table width="100%" border="0" cellpadding="0">
        <tr> 
          <td>

           <h4><a name="_Toc467207142">14.4 使用xsl:value-of来计算节点值</a></h4>
<p>xsl:value-of元素把输入文档中的节点值复制到输出文档中。xsl:value-of 元素的select特性指定正在获取的是哪个节点值。</p>
<p>例如，假设要将文字An Atom代替为由NAME子元素内容给出的ATOM元素的名称，可用&lt;xsl:value-of select="NAME"/&gt;代替An 
  Atom，如下所示：</p>
<p>&lt;xsl:template match="ATOM"&gt;</p>
<p> &lt;xsl:value of select="NAME"/&gt; </p>
<p>&lt;/xsl:template&gt;</p>
<p>然后，当将样式单应用于清单14-1时，产生如下文本：</p>
<p>&lt;html&gt;&lt;head/&gt;&lt;body&gt;</p>
<p></p>
<p> Hydrogen</p>
<p></p>
<p> Helium</p>
<p></p>
<p>&lt;/body&gt;&lt;/html&gt;</p>
<p>选择其值的项目（本例中的NAME元素）是与源节点有关的。源节点是由模板来匹配的项目（本例中的特指ATOM元素）。因此，当氢的ATOM与&lt;xsl:template 
  match= "ATOM"&gt;相匹配，氢的ATOM的NAME元素就由xsl:value-of选定了。当氦的ATOM与&lt;xsl:template 
  match= "ATOM"&gt;相匹配时，氦的ATOM的NAME元素就由xsl:value-of选定了。</p>
<p>节点的值总是字符串，有时可能为空字符串。此字符串的精确内容由节点的类型而定。最普通的节点类型为元素，元素节点的值特别简单，就是在元素的开始标记和结束标记之间的所有可析字符数据（但不是标记！）。例如，清单14-1中的第一个ATOM元素如下所示：</p>
<p>&lt;ATOM STATE="GAS"&gt;</p>
<p> &lt;NAME&gt;Hydrogen&lt;/NAME&gt;</p>
<p> &lt;SYMBOL&gt;H&lt;/SYMBOL&gt;</p>
<p> &lt;ATOMIC_NUMBER&gt;l&lt;/ATOMIC_NUMBER&gt;</p>
<p> &lt;ATOMIC_WEIGHT&gt;1.00794&lt;/ATOMIC_WEIGHT&gt;</p>
<p> &lt;OXIDATION_STATES&gt;1&lt;/OXIDATION_STATES&gt;</p>
<p> &lt;BOILING_POINT UNITS="Kelvin"&gt;20.28&lt;/BOILING_POINT&gt;</p>
<p> &lt;MELTING_POINT UNITS="Kelvin"&gt;13.81&lt;/MELTING_POINT&gt;</p>
<p> &lt;DENSITY UNITS="grams/cubic centimeter"&gt;&lt;!- At 300K -&gt;</p>
<p> 0.0899</p>
<p> &lt;/DENSITY&gt;</p>
<p>&lt;/ATOM&gt;</p>
<p>元素的值显示如下：</p>
<p></p>
<p> Hydrogen</p>
<p> H</p>
<p> 1</p>
<p> 1<i>.</i>00794</p>
<p> 1</p>
<p> 20.28</p>
<p> 13.81</p>
<p></p>
<p> 0.0899</p>
<p>我通过删除所有的标记和注释后计算出了这些值。包括空格在内的其他一切内容都完整无缺地保留着。其他六个节点类型的值也可以类似的非常明显的方式加以计算。表14-1总结了这些值的结果。</p>
<p align="center">表14-1 节点值</p>
<p>
<center>
  <table BORDER cellspacing=1 cellpadding=7 width=500>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>节点类型
      </td>
      <td width="83%" valign="TOP"> 
        <p>值
      </td>
    </tr>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>根节点
      </td>
      <td width="83%" valign="TOP"> 
        <p>根元素的值
      </td>
    </tr>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>元素
      </td>
      <td width="83%" valign="TOP"> 
        <p>包括在元素中的所有可析的字符数据（包括元素的任何后代中的字符数据）
      </td>
    </tr>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>文本
      </td>
      <td width="83%" valign="TOP"> 
        <p>节点的文本；实际上为节点本身
      </td>
    </tr>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>特性
      </td>
      <td width="83%" valign="TOP"> 
        <p>标准化的特性值（详细说明见XML 1.0推荐的第3.3.3节）；主要为实体还原后的特性值，截去前导和后随的空格；不包括特性名、等号或引号
      </td>
    </tr>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>命名域
      </td>
      <td width="83%" valign="TOP"> 
        <p>用于命名域的URL
      </td>
    </tr>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>处理指令
      </td>
      <td width="83%" valign="TOP"> 
        <p>处理指令的值；不包括&lt;?或?&gt;以及处理指令名
      </td>
    </tr>
    <tr>
      <td width="17%" valign="TOP"> 
        <p>注释
      </td>
      <td width="83%" valign="TOP"> 
        <p>注释文本，不包括&lt;!--和-―&gt;
      </td>
    </tr>
  </table>
</center>
 
<a href='476.htm'>&lt;&lt;上一篇</a>&nbsp;&nbsp;<a href='478.htm'>下一篇&gt;&gt;</a></td>
        </tr>
      </table>
      <p>&nbsp; </p>
    </td>
  </tr>
</table>

</body>

</html>
