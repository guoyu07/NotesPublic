# 修改之后，需要运行 `sysctl -p` 使配置生效      // enable the configure change



######## Buffer 
net.ipv4.tcp_mem  =   379008       505344  758016
# the min, default and max receiving buffer size of TCP 
net.ipv4.tcp_rmem = 4096 32768 262142
# the min, default and max sending buffer size of TCP 
net.ipv4.tcp_wmem = 4096 32768 262142

# the default receving buffer size of inner core 
net.core.rmem_default = 262144
# the default sending buffer size of inner core
net.core.wmem_default = 262144
# the max receving buffer size of inner core 
net.core.rmem_max = 2097152
# the max sending buffer size of inner core 
net.core.wmem_max = 2097152



# System default settings live in /usr/lib/sysctl.d/00-system.conf.
# To override those settings, enter new settings here, or in an /etc/sysctl.d/<name>.conf file
#
# For more information, see sysctl.conf(5) and sysctl.d(5).

# BOOLEAN Values:
#   0             disable
#   1 (Non Zero)  enable


  
# the file descriptor limit in a process
# 一个进程可以同时打开最大的句柄数，即可以限制服务器最大并发连接数
fs.file-max = 99999

kernel.pid_max = 65535

# 当网卡接收数据包比内核处理更快时，会有一个队列保存这些数据包，该设置即该队列的
#   最大值
net.core.netdev_max_backlog = 8096


  
  
net.ipv4.ip_forward = 0

# 使用unix socket dgram来做进程间通信，如果请求量很大，需要调整此参数。系统默认为10，可以设置为100或者更大。或者增加worker进程的数量，减少单个worker进程分配的请求量。
net.unix.max_dgram_qlen = 10



# to allow TIME-WAIT socket re-collection
# 这对服务器很有意义，因为服务器上会有大量TIME-WAIT
# 是否socket reuse，此函数的作用是Server重启时可以快速重新使用监听的端口。如果没有设置此参数，会导致server重启时发生端口未及时释放而启动失败
# 允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；
net.ipv4.tcp_tw_reuse = 1

# 默认是2小时，若设置更小，可以更快速清理无效连接
net.ipv4.tcp_keepalive_time = 600

# the max time lasting in FIN-WAIT status when the server close the connection
# 表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。
net.ipv4.tcp_fin_timeout = 30

# the max number of TIME_WAIT, default 180,000
# 过多的TIME_WAIT会使Web 服务器变慢，所以超过这个数字TIME_WAIT 就会被立即清除
net.ipv4.tcp_max_tw_buckets = 5000


# default 1024
# TCP 三次握手建立阶段接收SYN请求队列的最大长度，将其设置更大一些可以使出现Nginx
#   繁忙来不及accept新连接事，Linux不至于丢失连接
net.ipv4.tcp_max_syn_backlog = 1024


# the local port range (not include remote) of UDP and TCP connection
net.ipv4.ip_local_port_range = 1024 61000

# 当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；
net.ipv4.tcp_syncookies = 1



# 使用socket快速回收，短连接Server需要开启此参数
# 我们在一些高并发的 WebServer上，为了端口能够快速回收，打开了 tcp_tw_reccycle ，而在关闭 tcp_tw_reccycle 的时候，kernel 是不会检查对端机器的包的时间戳的；打开了 tcp_tw_reccycle 了，就会检查时间戳，很不幸移动的cmwap发来的包的时间戳是乱跳的，所以我方的就把带了“倒退”的时间戳的包当作是“recycle的tw连接的重传数据，不是新的请求”，于是丢掉不回包，造成大量丢包。通过测试PC用opera连接进入无影响。
net.ipv4.tcp_tw_recycle = 0

